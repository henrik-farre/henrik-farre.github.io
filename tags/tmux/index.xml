<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tmux on Rockhopper.dk</title>
    <link>http://rockhopper.dk/tags/tmux/</link>
    <description>Recent content in Tmux on Rockhopper.dk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Jan 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://rockhopper.dk/tags/tmux/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>zsh prompt/window title: trim middle of path</title>
      <link>http://rockhopper.dk/linux/zsh-promptwindow-title-trim-middle-of-path/</link>
      <pubDate>Tue, 07 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://rockhopper.dk/linux/zsh-promptwindow-title-trim-middle-of-path/</guid>
      <description>&lt;p&gt;I run zsh in tmux, and sometimes I end up in a deep directory where the path matches that of another window in tmux (for example in my local docker development environment and on the testing/production server). When this happens just seeing the last part of the path as the window title is not enough, like this: &amp;#8230;/sites/all/modules/somemodule.&lt;/p&gt;

&lt;p&gt;So I changed my ~/.zshrc to contain this:&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&#34;language-bash&#34;&gt;####################################################
# Set title function
# Used in precmd
function title() {
  # escape &#39;%&#39; chars in $1, make nonprintables visible
  local cmd=${(V)1//\%/\%\%}

  # See &#34;Conditional Substrings in Prompts&#34;
  # http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html
  # %X&amp;gt;...&amp;gt;                     : truncate to 40 chars followed by ...
  # %X(c:true-text:false-text)  : if c &amp;gt; %X show true text, else false text

  # Truncate cmd to 40
  cmd=$(print -Pn &#34;%40&amp;gt;...&amp;gt;$cmd&#34; | tr -d &#34;\n&#34;)

  case $TERM in
    screen|screen-bce|screen-256color|screen-256color-bce)
      if [[ -z $SSH_TTY ]]; then
        #print -Pn &#34;\ek%40&amp;lt;...&amp;lt;%~&amp;gt; $cmd\e\\&#34;
        # if c (current path with prefix replace, aka ~) is larger than 7,
        # show first 3 parts, then ... and then last 3 parts, else just %~
        print -Pn &#34;\ek%7(c:%-3~/.../%3~:%~) $cmd\e\\&#34;
      else
        # With user/hostname
        print -Pn &#34;\ek%m:%40&amp;lt;...&amp;lt;%~&amp;gt; $cmd\e\\&#34;
      fi
      ;;
    xterm*|rxvt*)
      # plain xterm title
      if [[ -z $SSH_TTY ]]; then
        print -Pn &#34;\e]2;%40&amp;lt;...&amp;lt;%~&amp;gt; $cmd\a&#34;
      else
        # With user/hostname
        print -Pn &#34;\e]2;%n@%m:%40&amp;lt;...&amp;lt;%~&amp;gt; $cmd\a&#34;
      fi
      ;;
  esac
}

####################################################
# Window title
# precmd is called just before the prompt is printed
function precmd() {
  title &#34;&#34;
  # Don&#39;t run vcs_info if remote shell
  if [[ -z $SSH_TTY ]]; then
    vcs_info
  fi
}
# preexec is called just before any command line is executed
function preexec() {
  title &#34;$1&#34;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This creates the following window title: ~/Work/docker/&amp;#8230;/all/modules/somemodule. The magic happens by saying %7(c:%-3~/&amp;#8230;/%3~:%~) which means: if &amp;#8220;c&amp;#8221;, which contains the entire path after prefix has been replaced -&amp;gt; /home/username to ~, is larger than 7, show the 3 first directories, then &amp;#8230; and finally the last 3 directories.&lt;/p&gt;

&lt;p&gt;The same can be done in the shell prompt.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
