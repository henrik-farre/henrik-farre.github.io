<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Rockhopper.dk</title>
    <link>http://rockhopper.dk/post/</link>
    <description>Recent content in Posts on Rockhopper.dk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 May 2016 10:51:24 +0200</lastBuildDate>
    <atom:link href="http://rockhopper.dk/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Behat: taking screenshots of failed steps</title>
      <link>http://rockhopper.dk/linux/software/behat-taking-screenshots-of-failed-steps</link>
      <pubDate>Tue, 17 May 2016 10:51:24 +0200</pubDate>
      
      <guid>http://rockhopper.dk/linux/software/behat-taking-screenshots-of-failed-steps</guid>
      <description>&lt;p&gt;Getting a screenshot and a dump of the HTML of a failed step is invaluable when running tests on a headless &amp;quot;browser&amp;quot; like PhantomJS, and this post will show you how&lt;/p&gt;

&lt;p&gt;You will of cause need a working Behat/PhantomJS setup to run this code, you can see my post about &lt;a href=&#34;http://rockhopper.dk/linux/software/behat-tests-with-symfony3-phantomjs-and-docker/&#34;&gt;Behat tests with Symfony 3, PhantomJS and Docker&lt;/a&gt; on how to configure everything like &lt;code&gt;behat.yml&lt;/code&gt;
.&lt;/p&gt;

&lt;p&gt;The following code is compiled from this Github bug report: &lt;a href=&#34;https://github.com/Behat/Behat/issues/649&#34;&gt;Behat 3: Taking screenshots after failed steps #649&lt;/a&gt; and &lt;a href=&#34;https://www.google.dk/#q=takeScreenshotAfterFailedStep&#34;&gt;several other people using &amp;quot;takeScreenshotAfterFailedStep&amp;quot; as the function name&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Edit your &lt;code&gt;features/bootstrap/FeatureContext.php&lt;/code&gt;
 and create the takeScreenshotAfterFailedStep function:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

use Behat\Behat\Context\Context;
use Behat\Behat\Context\SnippetAcceptingContext;
use Behat\Gherkin\Node\PyStringNode;
use Behat\Gherkin\Node\TableNode;

use Behat\Testwork\Tester\Result\TestResult;
use Behat\Behat\Hook\Scope\AfterStepScope;
use Behat\Behat\Hook\Scope\BeforeScenarioScope;

class FeatureContext implements Context, SnippetAcceptingContext
{
    /** @var \Behat\MinkExtension\Context\MinkContext */
    private $minkContext;

    public function __construct() {}

    /**
     * @BeforeScenario
     * http://behat.readthedocs.org/en/v3.0/cookbooks/context_communication.html
     */
    public function gatherContexts(BeforeScenarioScope $scope)
    {
        $environment = $scope-&amp;gt;getEnvironment();
        $this-&amp;gt;minkContext = $environment-&amp;gt;getContext(&#39;Behat\MinkExtension\Context\MinkContext&#39;);
    }

    /**
     * @AfterStep
     */
    public function takeScreenshotAfterFailedStep(AfterStepScope $scope)
    {
        if (TestResult::FAILED === $scope-&amp;gt;getTestResult()-&amp;gt;getResultCode()) {
            $driver = $this-&amp;gt;minkContext-&amp;gt;getSession()-&amp;gt;getDriver();

            if (!$driver instanceof Behat\Mink\Driver\Selenium2Driver) {
                return;
            }

            $page               = $this-&amp;gt;minkContext-&amp;gt;getSession()-&amp;gt;getPage()-&amp;gt;getContent();
            $screenshot         = $driver-&amp;gt;getScreenshot();
            $screenshotFileName = date(&#39;d-m-y&#39;).&#39;-&#39;.uniqid().&#39;.png&#39;;
            $pageFileName       = date(&#39;d-m-y&#39;).&#39;-&#39;.uniqid().&#39;.html&#39;;
            // NOTE: hardcoded path:
            $filePath           = &#34;/var/www/symfony.dev/&#34;;

            file_put_contents($filePath.$screenshotFileName, $screenshot);
            file_put_contents($filePath.$pageFileName, $page);
            print &#39;Screenshot at: &#39;.$filePath.$screenshotFileName.&#34;\n&#34;;
            print &#39;HTML dump at: &#39;.$filePath.$pageFileName.&#34;\n&#34;;
        }
    }
}&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;When a step failes you should see something like:&lt;/p&gt;

&lt;pre&gt;Feature: Homepage
  In order to see if the home page works
  As a website user
  I need to be able to see the home page

  Scenario: See the home page                # features/homepage.feature:6
    Given I am on &#34;/&#34;                        # Behat\MinkExtension\Context\MinkContext::visit()
    Then I should see &#34;Welcome to Symfony 4&#34; # Behat\MinkExtension\Context\MinkContext::assertPageContainsText()
      The text &#34;Welcome to Symfony 4&#34; was not found anywhere in the text of the current page. (Behat\Mink\Exception\ResponseTextException)
    │
    │  Screenshot at: /var/www/symfony.dev/17-05-16-573ae8a1e9f9a.png
    │  HTML dump at: /var/www/symfony.dev/17-05-16-573ae8a1e9fd3.html
    │
    │
    └─ @AfterStep # FeatureContext::takeScreenshotAfterFailedStep()

--- Failed scenarios:

    features/homepage.feature:6

1 scenario (1 failed)
2 steps (1 passed, 1 failed)
0m0.31s (13.49Mb)&lt;/pre&gt;

&lt;p&gt;Happy testing :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Behat tests with Symfony 3, PhantomJS and Docker</title>
      <link>http://rockhopper.dk/linux/software/behat-tests-with-symfony3-phantomjs-and-docker</link>
      <pubDate>Sat, 14 May 2016 14:56:22 +0200</pubDate>
      
      <guid>http://rockhopper.dk/linux/software/behat-tests-with-symfony3-phantomjs-and-docker</guid>
      <description>

&lt;p&gt;Writing tests should be easy, but installing and maintaining every single piece needed is nontrivial. Thankfully Docker can provide each piece of the jigsaw: Symfony 3, Behat and PhantomJS.&lt;/p&gt;

&lt;p&gt;I have created &lt;a href=&#34;https://github.com/henrik-farre/docker&#34;&gt;pilotboat&lt;/a&gt; to make it easy for me to develop and test PHP based applications, and I will use it in this how-to. If you prefer to use another setup, feel free to look through my &lt;a href=&#34;https://github.com/henrik-farre/docker&#34;&gt;github repository for pilotboat&lt;/a&gt; for inspiration.&lt;/p&gt;

&lt;h2 id=&#34;prerequisite:dd2227ba96c5d4fb3ed6a97f377930d8&#34;&gt;Prerequisite&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Working Docker installation&lt;/li&gt;
&lt;li&gt;A top level domain that points to your local machine, e.g. .dev&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;pilotboat-setup:dd2227ba96c5d4fb3ed6a97f377930d8&#34;&gt;Pilotboat setup&lt;/h2&gt;

&lt;p&gt;The following steps are required to setup pilotboat:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Clone &lt;a href=&#34;https://github.com/henrik-farre/docker&#34;&gt;https://github.com/henrik-farre/docker&lt;/a&gt; to your preferred location&lt;/li&gt;
&lt;li&gt;Add the bin directory to your $PATH.&lt;/li&gt;
&lt;li&gt;(Optional) Create an &lt;a href=&#34;https://blackfire.io&#34;&gt;Blackfire.io&lt;/a&gt; account&lt;/li&gt;
&lt;li&gt;Copy containers/docker.env.skel to containers/docker.env and fill out the values for your Blackfire.io account, or leave them blank&lt;/li&gt;
&lt;li&gt;Run: &lt;kbd&gt;pilotboat start php-dev-debian-jessie&lt;/kbd&gt;
 (starts the default image based on Debian Jessie with Apache 2.4.x and PHP 5.6.x)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Docker-compose will download and build the needed images and start the containers.&lt;/p&gt;

&lt;h2 id=&#34;site-setup:dd2227ba96c5d4fb3ed6a97f377930d8&#34;&gt;Site setup&lt;/h2&gt;

&lt;p&gt;To create a site based on Symfony 3 run &lt;kbd&gt;pilotboat site-create symfony.dev symfony&lt;/kbd&gt;
 (symfony.dev is your domain name, you may choose anything you like). The latest stable version of the Symfony 3 framework will be downloaded and installed. Note that pilotboat will create a database, but you will have to manually configure &lt;code&gt;app/config/parameters.yml&lt;/code&gt;
 to access it.&lt;/p&gt;

&lt;h2 id=&#34;behat-configuration:dd2227ba96c5d4fb3ed6a97f377930d8&#34;&gt;Behat configuration&lt;/h2&gt;

&lt;p&gt;Enter the container with &lt;kbd&gt;pilotboat shell&lt;/kbd&gt;
 and change to your site: &lt;kbd&gt;cd symfony.dev&lt;/kbd&gt;
.&lt;/p&gt;

&lt;p&gt;Next you will have to install the needed bundles for Behat, using composer: &lt;kbd&gt;composer require --dev behat/behat behat/mink behat/mink-extension behat/mink-selenium2-driver&lt;/kbd&gt;
&lt;/p&gt;

&lt;p&gt;When composer is done installing, initialize Behat with &lt;kbd&gt;vendor/bin/behat --init&lt;/kbd&gt;
, this will create the &lt;code&gt;features&lt;/code&gt;
 directory and &lt;code&gt;features/bootstrap/FeatureContext.php&lt;/code&gt;
.&lt;/p&gt;

&lt;p&gt;Now we have to tie everything together using a &lt;code&gt;behat.yml&lt;/code&gt;
 file, that you create in the root directory of your site, e.g. /var/www/symfony.dev:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;default:
  suites:
    default:
      contexts:
        - FeatureContext
        - Behat\MinkExtension\Context\MinkContext
  extensions:
    Behat\MinkExtension:
      base_url: &#39;http://symfony.dev/&#39;
      sessions:
        default:
          selenium2:
            wd_host: &#39;http://phantomjs:8910/wd/hub&#39;&lt;/code&gt;&lt;/pre&gt;


&lt;h2 id=&#34;writing-and-running-tests:dd2227ba96c5d4fb3ed6a97f377930d8&#34;&gt;Writing and running tests&lt;/h2&gt;

&lt;p&gt;I will not go into detail on how to write tests, so the following is just a small example. Create &lt;code&gt;features/homepage.feature&lt;/code&gt;
 and put the following in the file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-cucumber&#34;&gt;Feature: Homepage
  In order to see if the home page works
  As a website user
  I need to be able to see the home page

  Scenario: See the home page
    Given I am on &#34;/&#34;
    Then I should see &#34;Welcome to Symfony 3&#34;&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Run &lt;kbd&gt;vendor/bin/behat&lt;/kbd&gt;
 to execute the test, and you should see something like:&lt;/p&gt;

&lt;pre&gt;Feature: Homepage
  In order to see if the home page works
  As a website user
  I need to be able to see the home page

  Scenario: See the home page                # features/homepage.feature:6
    Given I am on &#34;/&#34;                        # Behat\MinkExtension\Context\MinkContext::visit()
    Then I should see &#34;Welcome to Symfony 3&#34; # Behat\MinkExtension\Context\MinkContext::assertPageContainsText()

1 scenario (1 passed)
2 steps (2 passed)
0m0.21s (13.43Mb)&lt;/pre&gt;

&lt;p&gt;And you&#39;re ready to write tests :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Backing up to Google drive with Duplicity</title>
      <link>http://rockhopper.dk/linux/software/backing-up-to-google-drive-with-duplicity</link>
      <pubDate>Tue, 10 May 2016 10:40:15 +0200</pubDate>
      
      <guid>http://rockhopper.dk/linux/software/backing-up-to-google-drive-with-duplicity</guid>
      <description>

&lt;p&gt;As described in my &lt;a href=&#34;http://rockhopper.dk/linux/software/duplicity-backup-dropbox-vs-google-drive-back-end/&#34;&gt;previous post&lt;/a&gt; I use Duplicity with Google Drive for storage. In this post I give a quick how to on configuring Duplicity for that setup.&lt;/p&gt;

&lt;h2 id=&#34;prerequisites:a4873c35425d94672fb7ac53bf8aa261&#34;&gt;Prerequisites&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Duplicity installed&lt;/li&gt;
&lt;li&gt;PyDrive, I installed it from Arch Linux&#39;s &lt;a href=&#34;https://aur.archlinux.org/packages/python2-pydrive/&#34;&gt;Aur repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GPG keys configured&lt;/li&gt;
&lt;li&gt;A Google Drive account&lt;/li&gt;
&lt;li&gt;First time you run Duplicity it has to be done interactively, as it will prompt you to allow access to Google drive&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;google-drive-api-setup:a4873c35425d94672fb7ac53bf8aa261&#34;&gt;Google drive API setup&lt;/h2&gt;

&lt;p&gt;Go to &lt;a href=&#34;https://console.developers.google.com/&#34;&gt;console.developers.google.com&lt;/a&gt; and create a new project, under &amp;quot;Show advanced options &amp;gt; App Engine location&amp;quot; I selected &amp;quot;europe-west&amp;quot;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Select &amp;quot;Google Drive API&amp;quot; and enable, then select &amp;quot;Credentials&amp;quot; in the menu to the left&lt;/li&gt;
&lt;li&gt;Fill out &amp;quot;OAuth consent screen&amp;quot;&lt;/li&gt;
&lt;li&gt;Click &amp;quot;Create credentials&amp;quot; in the popup and select &amp;quot;OAuth client ID&amp;quot; in the dropdown&lt;/li&gt;
&lt;li&gt;Select &amp;quot;Other&amp;quot; and give the client a name&lt;/li&gt;
&lt;li&gt;Download the JSON file, save it as &lt;code&gt;/root/.duplicity/client_secrets.json&lt;/code&gt;
. Put the &amp;quot;Client ID&amp;quot; and &amp;quot;Client secret&amp;quot; in &lt;code&gt;/root/.duplicity/gdrive&lt;/code&gt;
 (see below)&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&#34;row image-gallery&#34;&gt;
  
&lt;div class=&#34;col-xs-6 col-sm-4 col-md-4 gallery-photo&#34;&gt;
  &lt;a href=&#34;http://rockhopper.dk/uploads/duplicity_gdrive_backend_api_enable_api.png&#34;
    title=&#34;1. Enabling Google drive API for project&#34;
    class=&#34;thumbnail&#34;
    
&gt;
    
        
        &lt;img src=&#34;http://rockhopper.dk/uploads/thumbnails/duplicity_gdrive_backend_api_enable_api.png&#34;
            class=&#34;&#34;
            
            alt=&#34;1. Enabling Google drive API for project&#34;
            
            
        /&gt;
    
    
    &lt;div class=&#34;caption&#34;&gt;1. Enabling Google drive API for project&lt;/div&gt;
&lt;/a&gt;

&lt;/div&gt;

&lt;div class=&#34;col-xs-6 col-sm-4 col-md-4 gallery-photo&#34;&gt;
  &lt;a href=&#34;http://rockhopper.dk/uploads/duplicity_gdrive_backend_api_oauth_consent_screen.png&#34;
    title=&#34;2. OAuth consent screen&#34;
    class=&#34;thumbnail&#34;
    
&gt;
    
        
        &lt;img src=&#34;http://rockhopper.dk/uploads/thumbnails/duplicity_gdrive_backend_api_oauth_consent_screen.png&#34;
            class=&#34;&#34;
            
            alt=&#34;2. OAuth consent screen&#34;
            
            
        /&gt;
    
    
    &lt;div class=&#34;caption&#34;&gt;2. OAuth consent screen&lt;/div&gt;
&lt;/a&gt;

&lt;/div&gt;

&lt;div class=&#34;col-xs-6 col-sm-4 col-md-4 gallery-photo&#34;&gt;
  &lt;a href=&#34;http://rockhopper.dk/uploads/duplicity_gdrive_backend_api_create_oauth.png&#34;
    title=&#34;3. Selecting OAuth client ID&#34;
    class=&#34;thumbnail&#34;
    
&gt;
    
        
        &lt;img src=&#34;http://rockhopper.dk/uploads/thumbnails/duplicity_gdrive_backend_api_create_oauth.png&#34;
            class=&#34;&#34;
            
            alt=&#34;3. Selecting OAuth client ID&#34;
            
            
        /&gt;
    
    
    &lt;div class=&#34;caption&#34;&gt;3. Selecting OAuth client ID&lt;/div&gt;
&lt;/a&gt;

&lt;/div&gt;

&lt;div class=&#34;col-xs-6 col-sm-4 col-md-4 gallery-photo&#34;&gt;
  &lt;a href=&#34;http://rockhopper.dk/uploads/duplicity_gdrive_backend_api_create_client_id.png&#34;
    title=&#34;4. Creating client ID&#34;
    class=&#34;thumbnail&#34;
    
&gt;
    
        
        &lt;img src=&#34;http://rockhopper.dk/uploads/thumbnails/duplicity_gdrive_backend_api_create_client_id.png&#34;
            class=&#34;&#34;
            
            alt=&#34;4. Creating client ID&#34;
            
            
        /&gt;
    
    
    &lt;div class=&#34;caption&#34;&gt;4. Creating client ID&lt;/div&gt;
&lt;/a&gt;

&lt;/div&gt;

&lt;div class=&#34;col-xs-6 col-sm-4 col-md-4 gallery-photo&#34;&gt;
  &lt;a href=&#34;http://rockhopper.dk/uploads/duplicity_gdrive_backend_api_client_id.png&#34;
    title=&#34;5. Credentials for client and JSON download&#34;
    class=&#34;thumbnail&#34;
    
&gt;
    
        
        &lt;img src=&#34;http://rockhopper.dk/uploads/thumbnails/duplicity_gdrive_backend_api_client_id.png&#34;
            class=&#34;&#34;
            
            alt=&#34;5. Credentials for client and JSON download&#34;
            
            
        /&gt;
    
    
    &lt;div class=&#34;caption&#34;&gt;5. Credentials for client and JSON download&lt;/div&gt;
&lt;/a&gt;

&lt;/div&gt;


&lt;/div&gt;


&lt;p&gt;Create &lt;code&gt;/root/.duplicity/gdrive&lt;/code&gt;
 and add the values from step 5:&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;client_config_backend: settings
client_config:
  client_id: XXXXXXXXXXXXXXXXXXXXXX.apps.googleusercontent.com
  client_secret: XXXXXXXXXXXXXXXXXXXXXX
save_credentials: True
save_credentials_backend: file
save_credentials_file: gdrive.cache
get_refresh_token: True&lt;/code&gt;&lt;/pre&gt;
&lt;/p&gt;

&lt;h2 id=&#34;granting-duplicity-access-to-google-drive:a4873c35425d94672fb7ac53bf8aa261&#34;&gt;Granting Duplicity access to Google drive&lt;/h2&gt;

&lt;p&gt;PyDrive would prompt for a verification code everytime I ran Duplicity, and would not create the gdrive.cache file. I fixed it by changing the current working directory to &lt;code&gt;/root/.duplicity/&lt;/code&gt;
. A simple script like the following should work:&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash
cd /root/.duplicity/

PASSPHRASE=&#34;XXXXXXXXXX&#34;
GOOGLE_DRIVE_SETTINGS=&#34;/root/.duplicity/gdrive&#34;
DEST=&#34;gdocs://YOUR_GMAIL/SOME_DIR/$HOSTNAME/home&#34;
SRC=&#34;/home&#34;

duplicity incr --encrypt-key XXXXXXX --full-if-older-than 4M --volsize 1024 --asynchronous-upload --exclude-device-files --exclude-other-filesystems &#34;${SRC}&#34; &#34;${DEST}&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/p&gt;

&lt;p&gt;When you run this script the first time, you should get a prompt that says (XXXXXXXXXXXXXXXXXXXXXX will be your client id):&lt;/p&gt;

&lt;pre&gt;Go to the following link in your browser:

    https://accounts.google.com/o/oauth2/auth?scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive&amp;redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&amp;response_type=code&amp;client_id=XXXXXXXXXXXXXXXXXXXXXX.apps.googleusercontent.com&amp;access_type=offline

Enter verification code:&lt;/pre&gt;

&lt;p&gt;When you have approved access you should have the file &lt;code&gt;/root/.duplicity/gdrive.cache&lt;/code&gt;
, and next time Duplicity runs, it should automatically be authorized.&lt;/p&gt;

&lt;h2 id=&#34;wrapping-up:a4873c35425d94672fb7ac53bf8aa261&#34;&gt;Wrapping up&lt;/h2&gt;

&lt;p&gt;I have created a set of &lt;a href=&#34;https://github.com/henrik-farre/duplicity_backup_scripts&#34;&gt;Duplicity backup scrips&lt;/a&gt; with error handling/reporting that wraps backup, restore, cleanup and backup verification, feel free to use or fork them :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Duplicity backup: Dropbox vs Google drive back end</title>
      <link>http://rockhopper.dk/linux/software/duplicity-backup-dropbox-vs-google-drive-back-end</link>
      <pubDate>Mon, 02 May 2016 14:08:31 +0200</pubDate>
      
      <guid>http://rockhopper.dk/linux/software/duplicity-backup-dropbox-vs-google-drive-back-end</guid>
      <description>&lt;p&gt;As many other I have been looking for a cheap encrypted offsite backup for family photos, documents and other important data. I quickly choose duplicity as it provides the encrypted part and the possibility to use many different storage solutions, but the cheap offsite part is was a bit harder to find.&lt;/p&gt;

&lt;p&gt;I looked at Amazon offerings: S3 and Glacier, both look cheap, but I&#39;m unsure on how much I have to pay in total, and Glacier has crazy download prices.&lt;/p&gt;

&lt;p&gt;My second choice was Dropbox, and I purchased a Dropbox Pro account (1Tb) for EUR 99/year (~ DDK 744/year), but I canceled it after ~8 days, as upload was to slow (Thankfully I could get a refund). It took about ~50 hours to upload ~350Gb. Duplicity uses the &lt;a href=&#34;https://github.com/dropbox/dropbox-sdk-python/&#34;&gt;dropbox-python-sdk&lt;/a&gt;, and Dropbox API&#39;s method for uploading files larger than 150Mb is to use &amp;quot;chunked&amp;quot; upload; The first API call creates a session, and then data is append to this session until the entire file is uploaded. The chunk size can be configured, but 150Mb is the max size. So I experimented with different sizes and found that the default size of 16Mb would not utilize the bandwidth very good. But if I changed it to 150Mb I would see ~50Mbps for the entire file, but then would come a delay of 20-30secs where there was no network traffic to Dropbox:&lt;/p&gt;

&lt;div class=&#34;row image-gallery&#34;&gt;
  
&lt;div class=&#34;col-xs-6 col-sm-4 col-md-4 gallery-photo&#34;&gt;
  &lt;a href=&#34;http://rockhopper.dk/uploads/duplicity_wan_upload_dropbox_150mb_chunks.png&#34;
    title=&#34;Upload to Dropbox with 150Mb chunk size&#34;
    class=&#34;thumbnail&#34;
    
&gt;
    
        
        &lt;img src=&#34;http://rockhopper.dk/uploads/thumbnails/duplicity_wan_upload_dropbox_150mb_chunks.png&#34;
            class=&#34;&#34;
            
            alt=&#34;Upload to Dropbox with 150Mb chunk size&#34;
            
            
        /&gt;
    
    
    &lt;div class=&#34;caption&#34;&gt;Upload to Dropbox with 150Mb chunk size&lt;/div&gt;
&lt;/a&gt;

&lt;/div&gt;

&lt;div class=&#34;col-xs-6 col-sm-4 col-md-4 gallery-photo&#34;&gt;
  &lt;a href=&#34;http://rockhopper.dk/uploads/duplicity_wan_upload_dropbox_16mb_chunks.png&#34;
    title=&#34;Upload to Dropbox with 16Mb chunk size&#34;
    class=&#34;thumbnail&#34;
    
&gt;
    
        
        &lt;img src=&#34;http://rockhopper.dk/uploads/thumbnails/duplicity_wan_upload_dropbox_16mb_chunks.png&#34;
            class=&#34;&#34;
            
            alt=&#34;Upload to Dropbox with 16Mb chunk size&#34;
            
            
        /&gt;
    
    
    &lt;div class=&#34;caption&#34;&gt;Upload to Dropbox with 16Mb chunk size&lt;/div&gt;
&lt;/a&gt;

&lt;/div&gt;


&lt;/div&gt;


&lt;p&gt;I tested the chunk size by changing the DPBX_UPLOAD_CHUNK_SIZE in &lt;code&gt;/usr/lib/python2.7/site-packages/duplicity/backends/dpbxbackend.py&lt;/code&gt;
:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# This is chunk size for upload using Dpbx chumked API v2. It doesn&#39;t
# make sense to make it much large since Dpbx SDK uses connection pool
# internally. So multiple chunks will sent using same keep-alive socket
# Plus in case of network problems we most likely will be able to retry
# only failed chunk
DPBX_UPLOAD_CHUNK_SIZE = 16 * 1024 * 1024&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;So I decided to try Google Drive as back end, which was just fixed in duplicity version 0.7.07.1. Google drive utilized the bandwidth much better, and the delay between uploads is when duplicity prepares the next volume for upload.&lt;/p&gt;

&lt;p&gt;

&lt;div class=&#34;row&#34;&gt;
  &lt;div class=&#34;col-sm-4 photo&#34;&gt;
    &lt;a href=&#34;http://rockhopper.dk/uploads/duplicity_wan_upload_google_drive_volsize_512mb.png&#34;
    title=&#34;Upload to Google Drive with 512Mb volsize&#34;
    class=&#34;thumbnail&#34;
    
&gt;
    
        
        &lt;img src=&#34;http://rockhopper.dk/uploads/thumbnails/duplicity_wan_upload_google_drive_volsize_512mb.png&#34;
            class=&#34;&#34;
            
            alt=&#34;Upload to Google Drive with 512Mb volsize&#34;
            
            
        /&gt;
    
    
    &lt;div class=&#34;caption&#34;&gt;Upload to Google Drive with 512Mb volsize&lt;/div&gt;
&lt;/a&gt;

  &lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;So I purchased 1Tb of storage for Google drive for USD 9.99/month, and to my surprise it was without taxes, so I ended up paying USD 12.49/month (~ DKK 85/month), but it is much faster than Dropbox.&lt;/p&gt;

&lt;p&gt;But as duplicity tried to upload the very last file, it encountered an error:&lt;/p&gt;

&lt;pre&gt;Attempt 1 failed. OverflowError: length too large
Attempt 2 failed. OverflowError: length too large
Attempt 3 failed. OverflowError: length too large
Attempt 4 failed. OverflowError: length too large
Giving up after 5 attempts. OverflowError: length too large&lt;/pre&gt;

&lt;p&gt;It looks like it is caused by &lt;a href=&#34;https://github.com/googledrive/PyDrive/issues/27&#34;&gt;this bug&lt;/a&gt; in PyDrive. I could see duplicity using more than 70% memory, and then produce an error.&lt;/p&gt;

&lt;p&gt;Duplicity creates a &amp;quot;sigtar&amp;quot; file of around 3Gb, which is to much for PyDrive to handle.&lt;/p&gt;

&lt;pre&gt;2,9Gb  duplicity-full-signatures.20160425T193345Z.sigtar.gpg
3,1Gb  duplicity-full-signatures.20160425T193345Z.sigtar.part&lt;/pre&gt;

&lt;p&gt;The solution is to split the backup into smaller sets, so instead of backing up the entire home directory up, I have one set for documents, one for pictures and so on.&lt;/p&gt;

&lt;p&gt;So in conclusion I would say that I found almost every thing I looked for, except the cheap part :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HTPC/NAS for watching Netflix on Linux part 3: Powermanagement</title>
      <link>http://rockhopper.dk/linux/hardware/htpcnas-for-watching-netflix-on-linux-part-3-the-hardware/</link>
      <pubDate>Sun, 24 Apr 2016 11:44:30 +0200</pubDate>
      
      <guid>http://rockhopper.dk/linux/hardware/htpcnas-for-watching-netflix-on-linux-part-3-the-hardware/</guid>
      <description>

&lt;p&gt;My HTPC should be available when I need it, but not waste power when I&#39;m not at home or sleeping.&lt;/p&gt;

&lt;p&gt;See previous parts: &lt;a href=&#34;http://rockhopper.dk/linux/hardware/htpcnas-for-watching-netflix-on-linux-part-1-the-hardware/&#34;&gt;Part 1&lt;/a&gt;, &lt;a href=&#34;http://rockhopper.dk/linux/software/htpcnas-for-watching-netflix-on-linux-part-2-the-software/&#34;&gt;Part 2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My setup consists of 3 scripts:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;kodi-shutdown-inhibit-check.sh&lt;/code&gt;: Main script that is run from cron, talks to Kodi to allow/inhibit shutdown&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shutdown-check.sh&lt;/code&gt;: Checks if anything should inhibit shutdown&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set-next-wakeup.sh&lt;/code&gt;: Sets when the computer should start next time&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;kodi-idle-shutdown-timer:5f91763b9d80fb35b2b67752e5825a34&#34;&gt;Kodi idle shutdown timer&lt;/h2&gt;

&lt;p&gt;Kodi is set to shutdown after 5 mins of inactivity (See &amp;quot;Timer til lukning af funktion&amp;quot;):&lt;/p&gt;



&lt;div class=&#34;row&#34;&gt;
  &lt;div class=&#34;col-sm-4 photo&#34;&gt;
    &lt;a href=&#34;http://rockhopper.dk/uploads/kodi_powersave_settings.png&#34;
    title=&#34;Kodi Powersave settings&#34;
    class=&#34;thumbnail&#34;
    
&gt;
    
        
        &lt;img src=&#34;http://rockhopper.dk/uploads/thumbnails/kodi_powersave_settings.png&#34;
            class=&#34;&#34;
            
            alt=&#34;Kodi Powersave settings&#34;
            
            
        /&gt;
    
    
    &lt;div class=&#34;caption&#34;&gt;Kodi Powersave settings&lt;/div&gt;
&lt;/a&gt;

  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Every 4 minutes cron runs the &lt;code&gt;kodi-shutdown-inhibit-check.sh&lt;/code&gt; script. Note: it requires that &lt;code&gt;kodi-send&lt;/code&gt; from the kodi-eventclients package is installed.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash
# based on http://forum.xbmc.org/showthread.php?tid=172801&amp;pid=1500080#pid1500080

LASTSTATEFILE=&#34;/tmp/xbmc-shutdown-inibit-laststate&#34;

XBMCPIDFILE=&#34;/tmp/xbmc-shutdown-inibit-pid&#34;

# Handle restart of xbmc
CURRENTPID=$(pgrep kodi.bin)

KODI_NOT_RUNNING=0
if [[ $? -gt 0 ]]; then
  KODI_NOT_RUNNING=1
fi

if [[ -f $XBMCPIDFILE ]]; then
  PID=`cat $XBMCPIDFILE`
else
  PID=$CURRENTPID
  echo $PID &gt; $XBMCPIDFILE
fi

# if the old pid is not equal to the current, make sure that inhibit is send again
# by forcing it to be 0
if [[ $PID != $CURRENTPID ]]; then
  /usr/bin/logger &#34;$0: XBMC changed PID: $PID != $CURRENTPID&#34;
  if [[ -f $LASTSTATEFILE ]]; then
    rm $LASTSTATEFILE
  fi
  echo $CURRENTPID &gt; $XBMCPIDFILE
fi

/usr/local/bin/set-next-wakeup.sh &amp;&gt;/dev/null

if [[ -f $LASTSTATEFILE ]]; then
  LASTSTATE=`cat $LASTSTATEFILE`
else
  LASTSTATE=0
fi

/usr/local/bin/shutdown-check.sh &amp;&gt;/dev/null
CHECK=$?

# Enable to debug
# /usr/bin/logger &#34;$0: [DEBUG] CHECK: ${CHECK}&#34;
# /usr/bin/logger &#34;$0: [DEBUG] KODI_NOT_RUNNING: ${KODI_NOT_RUNNING}&#34;
# /usr/bin/logger &#34;$0: [DEBUG] PID: ${PID}&#34;
# /usr/bin/logger &#34;$0: [DEBUG] CURRENTPID: ${CURRENTPID}&#34;

# 0: Shutdown allowed
if [[ $CHECK -eq 0 ]]; then
  if [[ $KODI_NOT_RUNNING -gt 0 ]]; then
    /usr/bin/logger &#34;$0: Kodi not running, shutting down&#34;
    /usr/bin/shutdown -h now
  fi
  if [[ $LASTSTATE -ne 0 ]]; then
    kodi-send --action=&#34;XBMC.InhibitIdleShutdown(false)&#34; &gt;/dev/null
    /usr/bin/logger &#34;$0: Allow shutdown&#34;
    echo &#34;0&#34; &gt; $LASTSTATEFILE
#  else
#    /usr/bin/logger &#34;$0: Shutdown allready allowed&#34;
  fi
else
  if [[ $LASTSTATE -eq 0 ]]; then
    kodi-send --action=&#34;XBMC.InhibitIdleShutdown(true)&#34; &gt;/dev/null
    /usr/bin/logger &#34;$0: Inhibit shutdown&#34;
    echo &#34;1&#34; &gt; $LASTSTATEFILE
#  else
#    /usr/bin/logger &#34;$0: Shutdown allready inhibited&#34;
  fi
fi&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above script calls &lt;code&gt;shutdown-check.sh&lt;/code&gt; to see if it is OK to shutdown. The script checks for:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Time of day, weekdays the computer should be on between 9 and 10:59, and again from 19 to 23:59. If the computer is running after midnight it will be shutdown between 2 and 6&lt;/li&gt;
&lt;li&gt;A couple of checks to see if anything is running that should be allowed to continue running&lt;/li&gt;
&lt;li&gt;Is there any users logged in other than the user that runs Kodi (in this case the &amp;quot;mythtv&amp;quot; user)&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

# Check time
HOUR=`date &#39;+%-k&#39;`
MIN=`date +%M`
DAY=`date &#39;+%u&#39;`

case ${DAY} in
  1|2|3|4|5) # Work days
  ONHOURS=&#34;9 10 19 20 21 22 23&#34;
  ;;
  6|7) # Weekends
  ONHOURS=&#34;0 1 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23&#34;
  ;;
esac

# Hours where shutdown is forced
KILLHOURS=&#34;2 3 4 5 6&#34;

for KILLHOUR in ${KILLHOURS}; do
  if [[ ${HOUR} == ${KILLHOUR} ]]; then
    /usr/bin/logger &#34;$0: in killhour: ${HOUR} (day:${DAY})&#34;
    exit 0
  fi
done

for ONHOUR in ${ONHOURS}; do
  if [[ ${HOUR} == ${ONHOUR} ]]; then
    #/usr/bin/logger &#34;$0: in onhour: ${HOUR} (day:${DAY})&#34;
    exit 1
  else
    # Considered true if clock 18:16
    if [[ $(( ${HOUR} + 1 )) == ${ONHOUR} &amp;&amp; ${MIN} -gt 15 ]]; then
      /usr/bin/logger &#34;$0: less than 45min to onhour: ${HOUR} ${MIN} ${ONHOUR} (day:${DAY})&#34;
      exit 1
    fi
  fi
done

if [[ `transmission-remote -l | wc -l` &gt; 2 ]]; then
  /usr/bin/logger &#34;$0: transmission downloading&#34;
  exit 1
fi

if [[ `grep -c &#34;check&#34; /proc/mdstat` = 1 ]]; then
  /usr/bin/logger &#34;$0: raid resync is running&#34;
  exit 1
fi

if [ -e /tmp/noshutdown-*.lock ]; then
  /usr/bin/logger &#34;$0: a job is running&#34;
  exit 1
fi

declare -a CHECK_PROGRAMS
CHECK_PROGRAMS=(&#39;chrome&#39; &#39;chromium&#39; &#39;fs-uae&#39; &#39;popcorntime&#39; &#39;dolphin&#39;)

for PROGRAM in &#34;${CHECK_PROGRAMS[@]}&#34;; do
  if pgrep &#34;$PROGRAM&#34; &amp;&gt;/dev/null; then
    /usr/bin/logger &#34;$0: $PROGRAM is running&#34;
    exit 1
  fi
done

# if last | head | grep -q &#34;.*still logged in&#34;; then
USERS=`w -h | grep -v mythtv | wc -l`
if [[ $USERS &gt; 0 ]]; then
  # A user is logged in
  /usr/bin/logger &#34;$0: user logged in&#34;
  exit 1
fi

/usr/bin/logger &#34;$0: shutdown ok&#34;
exit 0&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;wakeup:5f91763b9d80fb35b2b67752e5825a34&#34;&gt;Wakeup&lt;/h2&gt;

&lt;p&gt;The last 2 pieces is to set up the computer so that it will automatically start the next day, and enable Wake-On-LAN.&lt;/p&gt;

&lt;h3 id=&#34;wakeup-via-acpi-rtc:5f91763b9d80fb35b2b67752e5825a34&#34;&gt;Wakeup via ACPI / RTC&lt;/h3&gt;

&lt;p&gt;I have made a simple script that ensures that the computer is turned on at 9:00 and again at 19:00 on weekdays, and at 7:00 in the weekend. The script is called &lt;code&gt;set-next-shutdown.sh&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Note: this requires that the BIOS/UEFI is configured correctly, in the case of the Gigabyte GA-Z87-D3HP the &amp;quot;Wake from Alarm&amp;quot; should be disabled.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

# Defaults to tomorrow @ 09:00:00 in weekdays, and 07:00:00 in the weekend
LASTWAKETIMEFILE=&#34;/tmp/set_next_wakeup_laststate&#34;

HOUR=`date &#39;+%-k&#39;`
DAY=`date &#39;+%u&#39;`

ONTIME=`date &#39;+%s&#39; -d &#39;tomorrow 09:00:00&#39;`

case ${DAY} in
  1|2|3|4) # Work days
    case ${HOUR} in
      0|1|2|3|4|5|6|7)
        ONTIME=`date &#39;+%s&#39; -d &#39;09:00:00&#39;`
        ;;
      8|9|10|11|12|13|14|15)
        ONTIME=`date &#39;+%s&#39; -d &#39;19:00:00&#39;`
        ;;
    esac
    ;;
  5) # Friday
    case ${HOUR} in
      0|1|2|3|4|5|6|7)
        ONTIME=`date &#39;+%s&#39; -d &#39;9:00:00&#39;`
        ;;
      8|9|10|11|12|13|14|15)
        ONTIME=`date &#39;+%s&#39; -d &#39;19:00:00&#39;`
        ;;
      16|17|18|19|20|21|22|23)
        ONTIME=`date &#39;+%s&#39; -d &#39;tomorrow 07:00:00&#39;`
        ;;
    esac
    ;;
  6) # Saturday
    case ${HOUR} in
      0|1|2|3|4|5|6)
        ONTIME=`date &#39;+%s&#39; -d &#39;7:00:00&#39;`
        ;;
      *)
        ONTIME=`date &#39;+%s&#39; -d &#39;tomorrow 07:00:00&#39;`
        ;;
    esac
    ;;
  7) # Sunday
    case ${HOUR} in
      0|1|2|3|4|5|6)
        ONTIME=`date &#39;+%s&#39; -d &#39;7:00:00&#39;`
        ;;
    esac
    ;;
esac

if [[ -f $LASTWAKETIMEFILE ]]; then
  LASTWAKETIME=`cat $LASTWAKETIMEFILE`
  if [[ $LASTWAKETIME != $ONTIME ]]; then
    /usr/bin/logger &#34;$0: Setting wakeup to $ONTIME (`date -d @${ONTIME}`)&#34;
    echo 0 &gt; /sys/class/rtc/rtc0/wakealarm
    echo $ONTIME &gt; /sys/class/rtc/rtc0/wakealarm
    echo $ONTIME &gt; $LASTWAKETIMEFILE
#  else
#    /usr/bin/logger &#34;$0: Wakeup allready set to $LASTWAKETIME (`date -d @${LASTWAKETIME}`)&#34;
  fi
else
  /usr/bin/logger &#34;$0: Setting wakeup to $ONTIME (`date -d @${ONTIME}`)&#34;
  echo 0 &gt; /sys/class/rtc/rtc0/wakealarm
  echo $ONTIME &gt; /sys/class/rtc/rtc0/wakealarm
  echo $ONTIME &gt; $LASTWAKETIMEFILE
fi&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;wake-on-lan-wol:5f91763b9d80fb35b2b67752e5825a34&#34;&gt;Wake On LAN (WOL)&lt;/h3&gt;

&lt;p&gt;In case I need the computer at a time where it is not runnin, I can wake it from my desktop computer or from my phone using the &lt;a href=&#34;https://play.google.com/store/apps/details?id=de.ralischer.wakeonlan&#34;&gt;Wake On LAN&lt;/a&gt; app.&lt;/p&gt;

&lt;p&gt;Activate WOL support using ethtool with a systemd unit (based on &lt;a href=&#34;https://wiki.archlinux.org/index.php/Wake-on-LAN#systemd_service&#34;&gt;Arch Linux Wiki:Wake-on-LAN&lt;/a&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[Unit]
Description=Wake-on-LAN for %i
After=network.target

[Service]
ExecStart=/usr/bin/ethtool -s %i wol g
Type=oneshot

[Install]
WantedBy=multi-user.target&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now I can use the wol tool to wake the HTPC: &lt;code&gt;wol -v ${MAC}&lt;/code&gt; where ${MAC} is the MAC address of NIC&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Local PHP development with Vim/Neovim and Docker</title>
      <link>http://rockhopper.dk/linux/software/local-php-development-with-vimneovim-and-docker</link>
      <pubDate>Tue, 12 Apr 2016 10:47:36 +0200</pubDate>
      
      <guid>http://rockhopper.dk/linux/software/local-php-development-with-vimneovim-and-docker</guid>
      <description>

&lt;p&gt;I use Neovim for all my text editing, and as I&#39;m a web developer I edit a lot of HTML, PHP, CSS and JavaScript. And not only do I have to switch between different programming/markup languages I also have to switch between different environments, ranging from old Drupal 6 sites on Debian squeeze to a Symfony setup on Debian Jessie to ensure that my code works in production.&lt;/p&gt;

&lt;h2 id=&#34;enter-docker:0c08f28664efdd056b375f3539e6eeb3&#34;&gt;Enter Docker&lt;/h2&gt;

&lt;p&gt;Switching between different versions of Apache/PHP/MySQL and other components is nearly impossible if they are locally installed. In the old dark days I would work on a site directly on the server, then later Vagrant came along and gave a virtual server that could be provisioned like the production server and now Docker gives lightweight containers that allows to quickly switch between different setups.&lt;/p&gt;

&lt;p&gt;I use a Docker image that contains all the needed components for the development environment. My docker setup is here &lt;a href=&#34;http://github.com/henrik-farre/docker&#34;&gt;http://github.com/henrik-farre/docker&lt;/a&gt;. I use a simple script to make interaction easier, it&#39;s called &amp;quot;pilotboat&amp;quot;.&lt;/p&gt;

&lt;p&gt;My Docker image contains Apache, MariaDB, PHP5 with Xdebug, Mailhog and Webgrind. Database data is kept separately in a volume and sites/virtual hosts are kept on the host.&lt;/p&gt;

&lt;h3 id=&#34;workflow:0c08f28664efdd056b375f3539e6eeb3&#34;&gt;Workflow&lt;/h3&gt;

&lt;p&gt;I can either drop an existing virtual host file in the vhosts directory, or run &lt;code&gt;pilotboat site-create mydomain.dev&lt;/code&gt; which will create a virtual host and directory structure. I use dnsmasq to point the top level domain (.dev) to localhost. If you use NetworkManager just create the following file: &lt;code&gt;/etc/NetworkManager/dnsmasq.d/dev.conf&lt;/code&gt; containing:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;address=/dev/127.0.0.1&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then I can checkout the site from git and import a database, which can be done by &lt;code&gt;pilotboat db-import database_name&lt;/code&gt;. The command will try to import a file in the databases directory called database_name.sql.gz and the file should have been created by running &lt;code&gt;mysqldump -f --opt -u root -p -c [database_name] | gzip &amp;gt; [database_name.sql.gz]&lt;/code&gt;, or alternative I use phpMyAdmin which is running in the container on &lt;a href=&#34;http://localhost/phpmyadmin/&#34;&gt;http://localhost/phpmyadmin/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;vim-neovim:0c08f28664efdd056b375f3539e6eeb3&#34;&gt;Vim / Neovim&lt;/h2&gt;

&lt;p&gt;The only special setup for Vim is connecting Xdebug in the container to Vdebug, and map paths from inside the container to the local file system:
&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;let g:vdebug_options = {&amp;quot;path_maps&amp;quot;: {&amp;quot;/var/www&amp;quot;: &amp;quot;/path/to/pilotboat/sites&amp;quot;}, &amp;quot;break_on_open&amp;quot;: 0, &amp;quot;watch_window_style&amp;quot;: &amp;quot;compact&amp;quot;, &amp;quot;server&amp;quot; : &amp;quot;172.17.0.1&amp;quot;, &amp;quot;port&amp;quot;: 9000}
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;I try to make Neovim do as much work for me as possible, and I use the following plugins to help me with that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/joonty/vdebug&#34;&gt;Vdebug&lt;/a&gt;: Debug PHP code step by step&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mattn/emmet-vim&#34;&gt;Emmet&lt;/a&gt;: Expands div#header &amp;gt; ul.menu &amp;gt; li*5 to real HTML&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/SirVer/ultisnips&#34;&gt;UltiSnips&lt;/a&gt;: Advanced snippet expanding, useful for quickly typing PHP functions complete with PHP doc comments&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Valloric/YouCompleteMe&#34;&gt;YouCompleteMe&lt;/a&gt;: Great for completing the current programming languages native functions and vars&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Raimondi/delimitMate&#34;&gt;delimitMate&lt;/a&gt;: Automatically insert matching brackets, parentheses and more&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tpope/vim-surround&#34;&gt;Surround&lt;/a&gt;: Wraps words in &#39; or * or other characters&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/scrooloose/nerdcommenter&#34;&gt;NERD Commenter&lt;/a&gt;: Comment/Uncomment single lines or blocks&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/benekastah/neomake&#34;&gt;Neomake&lt;/a&gt;: Automatically asynchronous syntax checking, works with PHP lint, &lt;a href=&#34;https://phpmd.org/&#34;&gt;PHP Mess Detector&lt;/a&gt; and &lt;a href=&#34;https://github.com/squizlabs/PHP_CodeSniffer&#34;&gt;PHP_CodeSniffer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can find my Neovim setup here: &lt;a href=&#34;http://github.com/henrik-farre/vimrc&#34;&gt;http://github.com/henrik-farre/vimrc&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HTPC/NAS for watching Netflix on Linux part 2: the software</title>
      <link>http://rockhopper.dk/linux/software/htpcnas-for-watching-netflix-on-linux-part-2-the-software/</link>
      <pubDate>Thu, 07 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://rockhopper.dk/linux/software/htpcnas-for-watching-netflix-on-linux-part-2-the-software/</guid>
      <description>

&lt;p&gt;The system runs Arch Linux with Kodi and Chrome to view Netflix. The post will not go into detail on how to configure Kodi, but rather getting the other pieces of the puzzle setup. Read part 1 here: &lt;a href=&#34;http://rockhopper.dk/linux/hardware/htpcnas-for-watching-netflix-on-linux-part-1-the-hardware/&#34;&gt;HTPC/NAS for watching Netflix on Linux part 1: the hardware&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Originally the setup used &lt;a href=&#34;https://wiki.archlinux.org/index.php/Pipelight&#34;&gt;Pipelight&lt;/a&gt; to watch Netflix, but I have moved away from that, because Chrome for Linux has native support for Netflix playback since version 42.&lt;/p&gt;

&lt;h2 id=&#34;xorg-setup:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;Xorg setup&lt;/h2&gt;

&lt;p&gt;The system uses integrated Intel HD 4400 Graphics, and works without any configuration, but to tweak driver settings I created the file &lt;code&gt;/etc/X11/xorg.conf.d/40-device.conf&lt;/code&gt; and added:&lt;/p&gt;

&lt;pre&gt;
Section &#34;Device&#34;
  Identifier  &#34;Card0&#34;
  Driver      &#34;intel&#34;
  Option      &#34;TearFree&#34; &#34;on&#34;
  Option      &#34;TripleBuffer&#34; &#34;on&#34;
  Option      &#34;Tiling&#34; &#34;on&#34;
  Option      &#34;monitor-HDMI1&#34; &#34;HDMI1&#34;
EndSection
&lt;/pre&gt;

&lt;p&gt;Refer to the Arch Linux &lt;a href=&#34;https://wiki.archlinux.org/index.php/Xorg&#34;&gt;wiki entry on Xorg&lt;/a&gt; for more information&lt;/p&gt;

&lt;h2 id=&#34;auto-login:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;Auto login&lt;/h2&gt;

&lt;p&gt;As Arch Linux uses systemd I just followed the instructions for &lt;a href=&#34;https://wiki.archlinux.org/index.php/Automatic_login_to_virtual_console&#34;&gt;setting up auto login to console&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Create the directory &lt;code&gt;/etc/systemd/system/getty@tty1.service.d&lt;/code&gt; and add the following content to the file: &lt;code&gt;/etc/systemd/system/getty@tty1.service.d/autologin.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;
[Service]
ExecStart=
ExecStart=-/usr/bin/agetty --autologin YOUR_USERNAME --noclear %I 38400 linux
&lt;/pre&gt;

&lt;p&gt;Remember to change YOUR_USERNAME&lt;/p&gt;

&lt;h2 id=&#34;auto-start-xorg:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;Auto start Xorg&lt;/h2&gt;

&lt;p&gt;I have this in &lt;code&gt;~/.bash_profile&lt;/code&gt; which gets sourced when auto login runs.&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&#34;language-bash&#34;&gt;source /etc/profile

umask 007
setterm -blank 0

export PATH=$HOME/bin:$PATH:/usr/local/bin

if [[ x$DISPLAY == &#39;x&#39; ]]; then
  # Do not redirect output if you want to run xorg as rootless
  exec startx
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;openbox:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;Openbox&lt;/h2&gt;

&lt;p&gt;The startx command executes &lt;code&gt;~/.xinitrc&lt;/code&gt; which contains:&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&#34;language-bash&#34;&gt;#!/bin/sh
exec openbox-session
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then Openbox executes: &lt;code&gt;~/.config/openbox/autostart&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

xrdb -load ~/.Xresources

# If colors looks &#34;off&#34;, try to enable the following, my problem has disappeared in newer versions of the Intel driver
# xrandr --output HDMI2 --set &#34;Broadcast RGB&#34; &#34;Full&#34;
# Hide cursor
unclutter &amp;
xset -dpms s off
setxkbmap dk

/usr/bin/kodi --standalone -fs &amp;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;kodi-tweaks:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;Kodi tweaks&lt;/h2&gt;

&lt;h3 id=&#34;hardware-accelerated-playback-on-intel:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;Hardware accelerated playback on Intel&lt;/h3&gt;

&lt;p&gt;I have installed libva-intel-driver, libva-vdpau-driver, libvdpau and libva and enabled hardware accelerated playback in Kodi&#39;s settings. The Intel HD Graphics can handle 1080p without problems.&lt;/p&gt;

&lt;h3 id=&#34;idle-cpu-usage:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;Idle CPU usage&lt;/h3&gt;

&lt;p&gt;Depending on the Intel driver version, Kodi might use about 15% CPU when idle, but by editing &lt;code&gt;~/.kodi/userdata/advancedsettings.xml&lt;/code&gt; I was able to reduce it to 3%&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;advancedsettings&amp;gt;
  &amp;lt;gui&amp;gt;
    &amp;lt;algorithmdirtyregions&amp;gt;3&amp;lt;/algorithmdirtyregions&amp;gt;
    &amp;lt;nofliptimeout&amp;gt;1000&amp;lt;/nofliptimeout&amp;gt;
  &amp;lt;/gui&amp;gt;
&amp;lt;/advancedsettings&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;mouse-pointer:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;Mouse pointer&lt;/h3&gt;

&lt;p&gt;To get a decent size cursor in Chrome I have these settings in &lt;code&gt;~/.Xresources&lt;/code&gt; (Requires the DMZ mouse cursor theme installed)&lt;/p&gt;

&lt;pre&gt;
Xcursor.theme: DMZ
Xcursor.size: 32
&lt;/pre&gt;

&lt;h2 id=&#34;plugins:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;Plugins&lt;/h2&gt;

&lt;p&gt;I created two simple addons that launches Chromium in fullscreen mode and opens a website like Rdio or Netflix. You can find them in my &lt;a href=&#34;https://github.com/henrik-farre/xbmc-addons&#34;&gt;XBMC addons repository&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;cec-consumer-electronics-control-over-hdmi:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;CEC (Consumer Electronics Control) over HDMI&lt;/h2&gt;

&lt;p&gt;I also added a USB - CEC Adapter from &lt;a href=&#34;https://www.pulse-eight.com/&#34;&gt;PulseEight&lt;/a&gt; so it is possible to control Kodi using the TVs remote control.&lt;/p&gt;

&lt;p&gt;If you wish to remap some of the buttons on your remote here is an excellent guide: &lt;a href=&#34;http://xbmcnut.blogspot.dk/2013/07/how-to-remap-cec-buttons-on-sony-tv.html&#34;&gt;How To remap CEC buttons on a Sony TV Remote for XBMC under Xbian 1.0.5a&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mouse hover not working in Chrome/Chromium? Solution: stop synergy</title>
      <link>http://rockhopper.dk/linux/mouse-hover-not-working-in-chromechromium-solution-stop-synergy/</link>
      <pubDate>Thu, 12 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://rockhopper.dk/linux/mouse-hover-not-working-in-chromechromium-solution-stop-synergy/</guid>
      <description>&lt;p&gt;I had a strange problem: when I was using Chromium (Open source version of Chrome): mouse hover was not working. Click, scroll and so on worked fine, but when the mouse hovered above an element on a webpage nothing happend.&lt;/p&gt;

&lt;p&gt;After googling I found that &lt;a href=&#34;http://synergy-project.org/&#34;&gt;synergy&lt;/a&gt; is the &lt;a href=&#34;https://www.google.dk/search?q=chrome+hover+synergy&#34;&gt;cause&lt;/a&gt;, so now I only start synergy when I need it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Multiple profiles in Firefox: tips and tricks</title>
      <link>http://rockhopper.dk/linux/multiple-profiles-in-firefox-tips-and-tricks/</link>
      <pubDate>Sun, 08 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://rockhopper.dk/linux/multiple-profiles-in-firefox-tips-and-tricks/</guid>
      <description>&lt;p&gt;I have two different profiles for Firefox, one for work, and one for everything else.&lt;/p&gt;

&lt;p&gt;To start Firefox with the correct profile, I have created two different application launchers (.desktop files) in ~/.local/share/applications, one called firefox-work.desktop and the other firefox-home.desktop&lt;/p&gt;

&lt;p&gt;The files contain:&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&#34;language-ini&#34;&gt;[Desktop Entry]
Name=Firefox Home
GenericName=Web Browser
Comment=Browse the World Wide Web
Exec=/usr/lib/firefox/firefox -P Home -no-remote %u
Icon=firefox
Terminal=false
Type=Application
MimeType=text/html;text/xml;application/xhtml+xml;application/vnd.mozilla.xul+xml;text/mml;x-scheme-handler/http;x-scheme-handler/https;
StartupNotify=true
Categories=Network;WebBrowser;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Replace &amp;#8220;Home&amp;#8221; with the name of your profile.&lt;/p&gt;

&lt;p&gt;In order to open links in the correct profile, I made a small shell script that used xdotool and zenity:&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&#34;language-bash&#34;&gt;#!/bin/sh

PROFILE=$(zenity --list --text &#34;Open $1 in which profile?&#34; --column &#34;Profile&#34; Work Home);

case $PROFILE in
  Home)
    PID=$(pgrep -f -- &#39;-P Home&#39;)
    ;;
  Work)
    PID=$(pgrep -f -- &#39;-P Work&#39;)
    ;;
  *)
    exit
    ;;
esac

# Avoid &#34;Can&#39;t consume 1 args; are only 0 available. This is a bug.&#34; message: https://github.com/jordansissel/xdotool/issues/14
# Pick the last id, as it seems to be the one needed
WID=$(xdotool search --any --pid $PID --name &#34;random_random_random&#34; | tail -n1)

xdotool windowactivate --sync $WID
xdotool key --window $WID ctrl+t
xdotool key --window $WID ctrl+l
xdotool type --window $WID &#34;$1&#34;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The last thing to to is to open exo-preferred-applications and select the script as the preferred &amp;#8220;web-browser&amp;#8221; (remember &amp;#8220;%s&amp;#8221;).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>zsh prompt/window title: trim middle of path</title>
      <link>http://rockhopper.dk/linux/zsh-promptwindow-title-trim-middle-of-path/</link>
      <pubDate>Tue, 07 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://rockhopper.dk/linux/zsh-promptwindow-title-trim-middle-of-path/</guid>
      <description>&lt;p&gt;I run zsh in tmux, and sometimes I end up in a deep directory where the path matches that of another window in tmux (for example in my local docker development environment and on the testing/production server). When this happens just seeing the last part of the path as the window title is not enough, like this: &amp;#8230;/sites/all/modules/somemodule.&lt;/p&gt;

&lt;p&gt;So I changed my ~/.zshrc to contain this:&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&#34;language-bash&#34;&gt;####################################################
# Set title function
# Used in precmd
function title() {
  # escape &#39;%&#39; chars in $1, make nonprintables visible
  local cmd=${(V)1//\%/\%\%}

  # See &#34;Conditional Substrings in Prompts&#34;
  # http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html
  # %X&amp;gt;...&amp;gt;                     : truncate to 40 chars followed by ...
  # %X(c:true-text:false-text)  : if c &amp;gt; %X show true text, else false text

  # Truncate cmd to 40
  cmd=$(print -Pn &#34;%40&amp;gt;...&amp;gt;$cmd&#34; | tr -d &#34;\n&#34;)

  case $TERM in
    screen|screen-bce|screen-256color|screen-256color-bce)
      if [[ -z $SSH_TTY ]]; then
        #print -Pn &#34;\ek%40&amp;lt;...&amp;lt;%~&amp;gt; $cmd\e\\&#34;
        # if c (current path with prefix replace, aka ~) is larger than 7,
        # show first 3 parts, then ... and then last 3 parts, else just %~
        print -Pn &#34;\ek%7(c:%-3~/.../%3~:%~) $cmd\e\\&#34;
      else
        # With user/hostname
        print -Pn &#34;\ek%m:%40&amp;lt;...&amp;lt;%~&amp;gt; $cmd\e\\&#34;
      fi
      ;;
    xterm*|rxvt*)
      # plain xterm title
      if [[ -z $SSH_TTY ]]; then
        print -Pn &#34;\e]2;%40&amp;lt;...&amp;lt;%~&amp;gt; $cmd\a&#34;
      else
        # With user/hostname
        print -Pn &#34;\e]2;%n@%m:%40&amp;lt;...&amp;lt;%~&amp;gt; $cmd\a&#34;
      fi
      ;;
  esac
}

####################################################
# Window title
# precmd is called just before the prompt is printed
function precmd() {
  title &#34;&#34;
  # Don&#39;t run vcs_info if remote shell
  if [[ -z $SSH_TTY ]]; then
    vcs_info
  fi
}
# preexec is called just before any command line is executed
function preexec() {
  title &#34;$1&#34;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This creates the following window title: ~/Work/docker/&amp;#8230;/all/modules/somemodule. The magic happens by saying %7(c:%-3~/&amp;#8230;/%3~:%~) which means: if &amp;#8220;c&amp;#8221;, which contains the entire path after prefix has been replaced -&amp;gt; /home/username to ~, is larger than 7, show the 3 first directories, then &amp;#8230; and finally the last 3 directories.&lt;/p&gt;

&lt;p&gt;The same can be done in the shell prompt.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Docker and PHP xdebug</title>
      <link>http://rockhopper.dk/linux/docker-and-php-xdebug/</link>
      <pubDate>Sat, 04 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://rockhopper.dk/linux/docker-and-php-xdebug/</guid>
      <description>&lt;p&gt;I have switched from using Vagrant to Docker as my local development environment, and I&amp;#8217;m still mentally trying to switch :)&lt;/p&gt;

&lt;p&gt;To use the &lt;a href=&#34;https://github.com/joonty/vdebug&#34;&gt;vdebug plugin&lt;/a&gt; in Vim I have set xdebug up inside the container as follows:&lt;/p&gt;

&lt;p&gt;/etc/php5/conf.d/20-xdebug.ini (Debian wheezy)&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&#34;language-ini&#34;&gt;zend_extension=/usr/lib/php5/20100525/xdebug.so
xdebug.remote_enable=1
xdebug.remote_autostart=0
xdebug.remote_connect_back=1
xdebug.remote_port=9000&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And in my ~/.vimrc I have these vdebug settings:&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&#34;language-vim&#34;&gt;let g:vdebug_options = {&#34;path_maps&#34;: {&#34;/var/www&#34;: &#34;/home/username/Localdev&#34;}, \
&#34;break_on_open&#34;: 0, &#34;watch_window_style&#34;: &#34;compact&#34;, \
&#34;server&#34; : &#34;172.17.42.1&#34;}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;172.17.42.1 is the ip of the bridge created by docker, it can be found by using ip addr and looking for the &amp;#8220;docker0&amp;#8221; interface.&lt;/p&gt;

&lt;p&gt;I create the xdebug ini file in my Dockerfile, see my &lt;a href=&#34;https://github.com/henrik-farre/docker&#34;&gt;Docker repository&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HTPC/NAS for watching Netflix on Linux part 1: the hardware</title>
      <link>http://rockhopper.dk/linux/hardware/htpcnas-for-watching-netflix-on-linux-part-1-the-hardware/</link>
      <pubDate>Wed, 13 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://rockhopper.dk/linux/hardware/htpcnas-for-watching-netflix-on-linux-part-1-the-hardware/</guid>
      <description>

&lt;p&gt;I decided to build a new HTPC/NAS in order to watch &lt;a href=&#34;http://www.netflix.com&#34;&gt;Netflix&lt;/a&gt; (using &lt;a href=&#34;https://wiki.archlinux.org/index.php/Pipelight&#34;&gt;pipelight&lt;/a&gt;) on Linux, and combine two older machines into one.&lt;/p&gt;

&lt;p&gt;My old HTPC was based on a 1.6GHz AMD Sempron from 2007 and a Nvidia GeForce N210. While it played Full HD content fine using &lt;a href=&#34;https://wiki.archlinux.org/index.php/VDPAU&#34;&gt;vdpau&lt;/a&gt;, it was not able to handle Netflix using pipelight. A second machine with a Intel Atom CPU was used to store all the multimedia and host MythTV.&lt;/p&gt;

&lt;p&gt;Specifications of the new machine are:&lt;/p&gt;

&lt;h2 id=&#34;motherboard:6f5e50861940930885d16cc412b3fd7a&#34;&gt;Motherboard&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.gigabyte.com/products/product-page.aspx?pid=4519&#34;&gt;Gigabyte GA-Z87-D3HP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nice motherboard, ok PWM fan controls, only thing I dislike is the UEFI bios. Some options change when I navigate using the keyboard arrows&amp;#8230; come on, do I &lt;em&gt;really&lt;/em&gt; need a mouse for changing bios options?&lt;/p&gt;

&lt;p&gt;Everything I have tested works in Linux, also these things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;lm-sensors: supports the it8728 chip&lt;/li&gt;
&lt;li&gt;Wake-on-lan&lt;/li&gt;
&lt;li&gt;Audio over HDMI&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I did not test:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;USB 3.0&lt;/li&gt;
&lt;li&gt;Changing the &amp;#8220;Resume by Alarm&amp;#8221; time from Linux.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Fancontrol in Linux&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;lspci reports:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;00:00.0 Host bridge: Intel Corporation 4th Gen Core Processor DRAM Controller (rev 06)
00:02.0 VGA compatible controller: Intel Corporation Device 041e (rev 06)
00:03.0 Audio device: Intel Corporation Xeon E3-1200 v3/4th Gen Core Processor HD Audio Controller (rev 06)
00:14.0 USB controller: Intel Corporation 8 Series/C220 Series Chipset Family USB xHCI (rev 04)
00:16.0 Communication controller: Intel Corporation 8 Series/C220 Series Chipset Family MEI Controller #1 (rev 04)
00:19.0 Ethernet controller: Intel Corporation Ethernet Connection I217-V (rev 04)
00:1a.0 USB controller: Intel Corporation 8 Series/C220 Series Chipset Family USB EHCI #2 (rev 04)
00:1b.0 Audio device: Intel Corporation 8 Series/C220 Series Chipset High Definition Audio Controller (rev 04)
00:1c.0 PCI bridge: Intel Corporation 8 Series/C220 Series Chipset Family PCI Express Root Port #1 (rev d4)
00:1c.3 PCI bridge: Intel Corporation 82801 PCI Bridge (rev d4)
00:1d.0 USB controller: Intel Corporation 8 Series/C220 Series Chipset Family USB EHCI #1 (rev 04)
00:1f.0 ISA bridge: Intel Corporation Z87 Express LPC Controller (rev 04)
00:1f.2 SATA controller: Intel Corporation 8 Series/C220 Series Chipset Family 6-port SATA Controller 1 [AHCI mode] (rev 04)
00:1f.3 SMBus: Intel Corporation 8 Series/C220 Series Chipset Family SMBus Controller (rev 04)
02:00.0 PCI bridge: Intel Corporation 82801 PCI Bridge (rev 41)&lt;/pre&gt;

&lt;h3 id=&#34;ram:6f5e50861940930885d16cc412b3fd7a&#34;&gt;RAM&lt;/h3&gt;

&lt;p&gt;I went for some cheap &lt;a href=&#34;http://www.kingston.com/us/memory/hyperx/blu&#34;&gt;Kingston HyperX blu&lt;/a&gt; 2 x 2 GB memory. The motherboard supports faster memory which should boost graphics performance, but I&amp;#8217;m content with how it performs now.&lt;/p&gt;

&lt;h2 id=&#34;cpu:6f5e50861940930885d16cc412b3fd7a&#34;&gt;CPU&lt;/h2&gt;

&lt;p&gt;I really like the &lt;a href=&#34;http://ark.intel.com/products/77481/&#34;&gt;Intel i3-4130T&lt;/a&gt; (Haswell) CPU. It runs @ 2.9GHz with a TDP of just 35W, and it comes with integrated Intel HD graphics 4400.&lt;/p&gt;

&lt;p&gt;It is possible to view Full HD content using &lt;a href=&#34;https://wiki.archlinux.org/index.php/VA-API&#34;&gt;va-api&lt;/a&gt; without using more than &amp;lt;20% CPU.&lt;/p&gt;

&lt;h3 id=&#34;cpu-cooler:6f5e50861940930885d16cc412b3fd7a&#34;&gt;CPU cooler&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&#34;http://www.coolermaster.com/product/Detail/cooling/cpu-air-cooler/hyper-212-evo.html&#34;&gt;Cooler Master Hyper 212 Evo&lt;/a&gt; is a direct heatpipe touch CPU cooler, and its fan can run at the lowest speed all the time thanks to the CPU&amp;#8217;s low TDP. I use &lt;a href=&#34;http://www.arcticsilver.com/as5.htm&#34;&gt;Arctic Silver 5&lt;/a&gt; thermal compound.&lt;/p&gt;

&lt;h2 id=&#34;control:6f5e50861940930885d16cc412b3fd7a&#34;&gt;Control&lt;/h2&gt;

&lt;p&gt;I picked the &lt;a href=&#34;http://www.chill-innovation.com/en/bluetooth-keyboards/12-chill-kb-1bt-wireless-bluetooth-micro-keyboard-nordic-5711045075841.html&#34;&gt;Chill KB-1BT Wireless Bluetooth Micro Keyboard&lt;/a&gt; because I was tired of my old infrared connected keyboard&amp;#8217;s poor range and it also had to be pointing directly at its receiver. And not only does the Chill KB-1BT have better range, it&amp;#8217;s also much easier to type on because it&amp;#8217;s much smaller so I can reach most keys with my thumbs.&lt;/p&gt;

&lt;p&gt;While the keyboard is excellent for typing and controlling Netflix/Rdio, I also bought a &lt;a href=&#34;http://www.pulse-eight.com/store/products/104-usb-hdmi-cec-adapter.aspx&#34;&gt;Pulse Eight USB &amp;#8211; CEC Adapter&lt;/a&gt; which allows me to control XBMC 100% using my TV&amp;#8217;s (Sony KDL-40WE5) remote.&lt;/p&gt;

&lt;h2 id=&#34;storage:6f5e50861940930885d16cc412b3fd7a&#34;&gt;Storage&lt;/h2&gt;

&lt;p&gt;I reused the 3 x 500Gb Seagate ST3500630AS discs from the Atom server running in a Raid 5 configuration.&lt;/p&gt;

&lt;h2 id=&#34;case:6f5e50861940930885d16cc412b3fd7a&#34;&gt;Case&lt;/h2&gt;

&lt;p&gt;First revision &lt;a href=&#34;http://techreport.com/review/6247/antec-sonata-atx-case&#34;&gt;Antec Sonata&lt;/a&gt; (does not even exist on Antec&amp;#8217;s page any more)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>UEFI booting Arch Linux on a HP ProBook 6360b</title>
      <link>http://rockhopper.dk/linux/hardware/uefi-booting-arch-linux-on-a-hp-probook-6360b/</link>
      <pubDate>Sun, 17 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>http://rockhopper.dk/linux/hardware/uefi-booting-arch-linux-on-a-hp-probook-6360b/</guid>
      <description>

&lt;p&gt;As I&amp;#8217;ve just got a new Samsung 840 Pro Series 256GB SSD for my work laptop (HP ProBook 6360b), I wanted to try switching from BIOS booting to UEFI.&lt;/p&gt;

&lt;h1 id=&#34;ssd-setup:769087bd4497991a049e43a8b2be2b7e&#34;&gt;SSD setup&lt;/h1&gt;

&lt;p&gt;Using gdisk I created two partitions:&lt;/p&gt;

&lt;pre&gt;Number  Start (sector)    End (sector)  Size       Code  Name
   1            2048          206847   100.0 MiB   EF00  EFI System
   2          206848       500118158   238.4 GiB   8300  Linux filesystem&lt;/pre&gt;

&lt;p&gt;I left the default align to 2048-sector boundaries.&lt;/p&gt;

&lt;p&gt;In gdisk I entered &amp;#8220;extra functionality (experts only)&amp;#8221; by pressing &amp;#8220;x&amp;#8221;, and then &amp;#8220;a&amp;#8221; ( &amp;#8220;set attributes&amp;#8221;), and selected &amp;#8220;0&amp;#8221; for &amp;#8220;system partition&amp;#8221; and &amp;#8220;2&amp;#8221; for &amp;#8220;legacy BIOS bootable&amp;#8221;&lt;/p&gt;

&lt;p&gt;Next I formatted the two partitions using:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;mkfs.vfat -F32 /dev/sda1&lt;/li&gt;
&lt;li&gt;mkfs.ext4 -m0 /dev/sda2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally I mounted the old disk (connected using the eSATA connector on the laptop) and the new disk, and used rsync to copy everything to the new disk.&lt;/p&gt;

&lt;h1 id=&#34;bootloader-setup:769087bd4497991a049e43a8b2be2b7e&#34;&gt;Bootloader setup&lt;/h1&gt;

&lt;p&gt;This was the tricky part. First I updated the firmware on the laptop to the newest version (F.29 from &lt;a href=&#34;http://h20000.www2.hp.com/bizsupport/TechSupport/SoftwareIndex.jsp?lang=en&amp;amp;cc=dk&amp;amp;prodNameId=5045588&amp;amp;prodTypeId=321957&amp;amp;prodSeriesId=5045581&amp;amp;swLang=13&amp;amp;taskId=135&amp;amp;swEnvOID=4060&#34;&gt;HPs support site&lt;/a&gt;). I tried all the .exe files on a computer running Windows 7 until I found the one that could create an USB stick.&lt;/p&gt;

&lt;h2 id=&#34;booting-in-uefi-mode:769087bd4497991a049e43a8b2be2b7e&#34;&gt;Booting in UEFI mode&lt;/h2&gt;

&lt;p&gt;Very importen bit: you can&amp;#8217;t install a UEFI bootloader unless you&amp;#8217;ve booted in UEFI mode.&lt;/p&gt;

&lt;p&gt;I used the instructions in the Arch Linux wiki on how to &lt;a href=&#34;https://wiki.archlinux.org/index.php/UEFI#Create_UEFI_bootable_USB_from_ISO&#34;&gt;Create UEFI bootable USB from ISO&lt;/a&gt;. Sometimes UEFI refused to boot from the USB, but it worked each time I selected the EFI file on the USB stick. To do that press F9 while the computer is booting and select &amp;#8220;Boot from EFI file&amp;#8221;, then select the USB device and EFI/boot/bootx64.efi&lt;/p&gt;

&lt;h2 id=&#34;installing-the-bootloader:769087bd4497991a049e43a8b2be2b7e&#34;&gt;Installing the bootloader&lt;/h2&gt;

&lt;p&gt;I tried rEFInd, gummiboot, grub2 and just using the kernel EFI stub support. Nothing worked. After reading &lt;a href=&#34;http://blog.fpmurphy.com/2010/09/uefi-booting-64-bit-redhat-enterprise-linux-6.html&#34;&gt;UEFI Booting 64-bit Redhat Enterprise Linux 6&lt;/a&gt; I figured out that HPs firmware only allows you to boot from &amp;#8220;OS bootloader&amp;#8221;, which means that it will only boot from \EFI\BOOT\BOOTX64.EFI. So I installed grub2 using these commands (/dev/sda1 is mounted at /boot/efi):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;grub-install &amp;#8211;target=x86_64-efi &amp;#8211;efi-directory=/boot/efi &amp;#8211;bootloader-id=arch_grub &amp;#8211;recheck&lt;/li&gt;
&lt;li&gt;grub-mkconfig -o /boot/grub/grub.cfg&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will put the EFI application in /boot/efi/EFI/arch_grub/grubx64.efi which does not work. So I just copied /boot/efi/EFI/arch_grub/grubx64.efi /boot/efi/EFI/BOOT/BOOTX64.EFI and everything works.&lt;/p&gt;

&lt;h1 id=&#34;conclusion:769087bd4497991a049e43a8b2be2b7e&#34;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;I can&amp;#8217;t say that that the time I used to get UEFI booting working was time well spend, nothing magic happens when booting using UEFI compared to legacy BIOS, but at least I&amp;#8217;m not using anything that is labelled &amp;#8220;legacy&amp;#8221; :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing CyanogenMod 7.1 on a Sony Ericsson Xperia Arc (LT15i)</title>
      <link>http://rockhopper.dk/linux/hardware/phone-and-pda/installing-cyanogenmod-7-1-on-a-sony-ericsson-xperia-arc-lt15i/</link>
      <pubDate>Tue, 03 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>http://rockhopper.dk/linux/hardware/phone-and-pda/installing-cyanogenmod-7-1-on-a-sony-ericsson-xperia-arc-lt15i/</guid>
      <description>&lt;p&gt;Although the instructions for upgrading the Sony Ericsson Xperia Arc (not the new S version) are &lt;a title=&#34;Sony Ericsson Xperia Arc: Full Update Guide&#34; href=&#34;http://wiki.cyanogenmod.com/wiki/Sony_Ericsson_Xperia_Arc:_Full_Update_Guide&#34; target=&#34;_blank&#34;&gt;pretty detailed&lt;/a&gt; there are some twists that are not documented:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You need to upgrade to the latests official Sony Ericsson rom (currently &amp;#8220;4.0.2.A.0.62 Generic Global World&amp;#8221; ), you can find links in this &lt;a title=&#34;ARC/ARC S (ROOT.FTF&amp;.IMG)4.0.2.A.0.62 Generic Global World+Flashtool+Ringtones+Other&#34; href=&#34;http://forum.xda-developers.com/showthread.php?t=1330314&#34; target=&#34;_blank&#34;&gt;xda developers thread&lt;/a&gt;, else the phone will not be able to unlock the SIM card&lt;/li&gt;
&lt;li&gt;To flash the rom you will need &lt;a title=&#34;Flashtool&#34; href=&#34;http://androxyde.github.com/&#34; target=&#34;_blank&#34;&gt;FlashTool&lt;/a&gt; (Java based app, works fine in Linux). And when it says that you have to connect the USB cable, and press a button, you don&amp;#8217;t have to press the power button at the same time&lt;/li&gt;
&lt;li&gt;The 7.1.0.2 version of CyanogenMod is not usable on the phone I installed it on, it kept crashing on the first screen, apparently the fix is to &lt;a title=&#34;The CyanogenMod7 droid animated screen loads in loop, can&#39;t setup phone &#34; href=&#34;http://forum.cyanogenmod.com/topic/44435-the-cyanogenmod7-droid-animated-screen-loads-in-loop-cant-setup-phone/page__p__302315#entry302315&#34; target=&#34;_blank&#34;&gt;remove an app using adb&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I ended up using 7.1.0.1 which works fine, except vibrate.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Upgrading an Android Developer Phone 1 to Cyanogenmod 5.0.7 (Android 2.1)</title>
      <link>http://rockhopper.dk/linux/hardware/phone-and-pda/upgrading-an-android-developer-phone-1-to-cyanogenmod-5-0-7-android-2-1/</link>
      <pubDate>Sat, 19 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>http://rockhopper.dk/linux/hardware/phone-and-pda/upgrading-an-android-developer-phone-1-to-cyanogenmod-5-0-7-android-2-1/</guid>
      <description>

&lt;p&gt;My ADP1 has been running Android 1.6 (Cyanogenmod 4.2.x) for quite a while now, and I was exited to see that it would be possible to run Android 2.1 on it thanks to Cyanogen :). This guide is a digest of information found on Cyanogen&amp;#8217;s wiki, like: &lt;a href=&#34;http://wiki.cyanogenmod.com/index.php/Full_Update_Guide_-_ADP1_Firmware_to_CyanogenMod&#34;&gt;ADP1 Firmware to CyanogenMod&lt;/a&gt;, please consult the wiki for up todate information and warnings :)&lt;/p&gt;

&lt;h2 id=&#34;prerequisite:8dd91434cb3dabb8ad3f5975fe4ac3b3&#34;&gt;Prerequisite&lt;/h2&gt;

&lt;p&gt;Download the following files:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://forum.xda-developers.com/showpost.php?p=4647751&amp;amp;postcount=1&#34;&gt;RA recovery for dream&lt;/a&gt; I use version 1.7.0&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.cyanogenmod.com/index.php/DangerSPL_and_CM_5_for_Dream&#34;&gt;DangerSPL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.cyanogenmod.com/index.php/Latest_version#ERE36B_Google_addon_for_G1.2FDream.2FSapphire&#34;&gt;Google apps for Cyanogen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.cyanogenmod.com/index.php/Latest_version#Current_Stable_Version_2&#34;&gt;Lateste Cyanogen 5.0.x for dream&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;install-recovery-image:8dd91434cb3dabb8ad3f5975fe4ac3b3&#34;&gt;Install recovery image&lt;/h2&gt;

&lt;p&gt;Based on &lt;a href=&#34;http://wiki.cyanogenmod.com/index.php/Full_Update_Guide_-_ADP1_Firmware_to_CyanogenMod&#34;&gt;Full Update Guide &amp;#8211; ADP1 Firmware to CyanogenMod&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Boot the phone into fastboot mode by holding the BACK button while pressing the power button&lt;/li&gt;
&lt;li&gt;On your computer run the following commands:&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;./fastboot device #check if the phone is available
./fastboot flash recovery recovery-RA-dream-v1.7.0.img
./fastboot reboot&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://android-dls.com/wiki/index.php?title=Fastboot&#34;&gt;More information about fastboot&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;install-bootloader:8dd91434cb3dabb8ad3f5975fe4ac3b3&#34;&gt;Install bootloader&lt;/h2&gt;

&lt;p&gt;In order to run Android 2.1 you need to replace the bootloader with one called &amp;#8220;DangerSPL&amp;#8221;, and there is a reason it is called &amp;#8220;Danger&amp;#8221; :) please read &lt;a href=&#34;http://wiki.cyanogenmod.com/index.php/DangerSPL_and_CM_5_for_Dream&#34;&gt;DangerSPL and CM 5 for Dream&lt;/a&gt; and read the warnings and prerequisites.&lt;/p&gt;

&lt;p&gt;Copy the files to the root of your SD card:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;DangerSPL: spl-signed.zip&lt;/li&gt;
&lt;li&gt;CyanogenMod: update-cm-5.0.7-DS-signed.zip&lt;/li&gt;
&lt;li&gt;Google Apps: gapps-ds-ERE36B-signed.zip&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Reboot the phone into recovery mode by holding hold the home button while booting.&lt;/p&gt;

&lt;p&gt;I did the following steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Run a Nandroid Backup&lt;/li&gt;
&lt;li&gt;Wipe Data/Factory Reset&lt;/li&gt;
&lt;li&gt;Flash DangerSPL by selecting &amp;#8220;Apply any zip from SD&amp;#8221; and then select spl-signed.zip&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After the bootloader has been flashed, reboot the phone when asked for it. The phone should boot into recovery mode again to complete the upgrade.&lt;/p&gt;

&lt;h2 id=&#34;install-cyanogenmod-5-0-7-and-google-apps:8dd91434cb3dabb8ad3f5975fe4ac3b3&#34;&gt;Install Cyanogenmod 5.0.7 and Google apps&lt;/h2&gt;

&lt;p&gt;After the bootloader has been installed it is time to flash Android 2.1 and Google apps&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Select &amp;#8220;Apply any zip from SD&amp;#8221; and then update-cm-5.0.7-DS-signed.zip&lt;/li&gt;
&lt;li&gt;Do the same with gapps-ds-ERE36B-signed.zip after CM 5.0.x&lt;/li&gt;
&lt;li&gt;Reboot (takes awhile to boot)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If all went well, you should be able to enter your PIN number and enjoy Android 2.1 :)&lt;/p&gt;

&lt;div id=&#34;_mcePaste&#34; style=&#34;position: absolute; left: -10000px; top: 202px; width: 1px; height: 1px; overflow: hidden;&#34;&gt;
  &lt;h1 id=&#34;firstHeading&#34; class=&#34;firstHeading&#34;&gt;
    DangerSPL and CM 5 for Dream
  &lt;/h1&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
