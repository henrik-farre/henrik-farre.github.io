<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software on Rockhopper.dk</title>
    <link>http://rockhopper.dk/categories/software/</link>
    <description>Recent content in Software on Rockhopper.dk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://rockhopper.dk/categories/software/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>HTPC/NAS for watching Netflix on Linux part 2: the software</title>
      <link>http://rockhopper.dk/linux/software/htpcnas-for-watching-netflix-on-linux-part-2-the-software/</link>
      <pubDate>Thu, 07 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://rockhopper.dk/linux/software/htpcnas-for-watching-netflix-on-linux-part-2-the-software/</guid>
      <description>

&lt;p&gt;The system runs Arch Linux with Kodi and Chrome to view Netflix. The post will not go into detail on how to configure Kodi, but rather getting the other pieces of the puzzle setup. Read part 1 here: &lt;a href=&#34;http://rockhopper.dk/linux/hardware/htpcnas-for-watching-netflix-on-linux-part-1-the-hardware/&#34;&gt;HTPC/NAS for watching Netflix on Linux part 1: the hardware&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Originally the setup used &lt;a href=&#34;https://wiki.archlinux.org/index.php/Pipelight&#34;&gt;Pipelight&lt;/a&gt; to watch Netflix, but I have moved away from that, because Chrome for Linux has native support for Netflix playback since version 42.&lt;/p&gt;

&lt;h2 id=&#34;xorg-setup:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;Xorg setup&lt;/h2&gt;

&lt;p&gt;The system uses integrated Intel HD 4400 Graphics, and works without any configuration, but to tweak driver settings I created the file &lt;code&gt;/etc/X11/xorg.conf.d/40-device.conf&lt;/code&gt; and added:&lt;/p&gt;

&lt;pre&gt;
Section &#34;Device&#34;
  Identifier  &#34;Card0&#34;
  Driver      &#34;intel&#34;
  Option      &#34;TearFree&#34; &#34;on&#34;
  Option      &#34;TripleBuffer&#34; &#34;on&#34;
  Option      &#34;Tiling&#34; &#34;on&#34;
  Option      &#34;monitor-HDMI1&#34; &#34;HDMI1&#34;
EndSection
&lt;/pre&gt;

&lt;p&gt;Refer to the Arch Linux &lt;a href=&#34;https://wiki.archlinux.org/index.php/Xorg&#34;&gt;wiki entry on Xorg&lt;/a&gt; for more information&lt;/p&gt;

&lt;h2 id=&#34;auto-login:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;Auto login&lt;/h2&gt;

&lt;p&gt;As Arch Linux uses systemd I just followed the instructions for &lt;a href=&#34;https://wiki.archlinux.org/index.php/Automatic_login_to_virtual_console&#34;&gt;setting up auto login to console&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Create the directory &lt;code&gt;/etc/systemd/system/getty@tty1.service.d&lt;/code&gt; and add the following content to the file: &lt;code&gt;/etc/systemd/system/getty@tty1.service.d/autologin.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;
[Service]
ExecStart=
ExecStart=-/usr/bin/agetty --autologin YOUR_USERNAME --noclear %I 38400 linux
&lt;/pre&gt;

&lt;p&gt;Remember to change YOUR_USERNAME&lt;/p&gt;

&lt;h2 id=&#34;auto-start-xorg:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;Auto start Xorg&lt;/h2&gt;

&lt;p&gt;I have this in &lt;code&gt;~/.bash_profile&lt;/code&gt; which gets sourced when auto login runs.&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&#34;language-bash&#34;&gt;source /etc/profile

umask 007
setterm -blank 0

export PATH=$HOME/bin:$PATH:/usr/local/bin

if [[ x$DISPLAY == &#39;x&#39; ]]; then
  # Do not redirect output if you want to run xorg as rootless
  exec startx
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;openbox:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;Openbox&lt;/h2&gt;

&lt;p&gt;The startx command executes &lt;code&gt;~/.xinitrc&lt;/code&gt; which contains:&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&#34;language-bash&#34;&gt;#!/bin/sh
exec openbox-session
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then Openbox executes: &lt;code&gt;~/.config/openbox/autostart&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

xrdb -load ~/.Xresources

# If colors looks &#34;off&#34;, try to enable the following, my problem has disappeared in newer versions of the Intel driver
# xrandr --output HDMI2 --set &#34;Broadcast RGB&#34; &#34;Full&#34;
# Hide cursor
unclutter &amp;
xset -dpms s off
setxkbmap dk

/usr/bin/kodi --standalone -fs &amp;&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;kodi-tweaks:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;Kodi tweaks&lt;/h2&gt;

&lt;h3 id=&#34;hardware-accelerated-playback-on-intel:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;Hardware accelerated playback on Intel&lt;/h3&gt;

&lt;p&gt;I have installed libva-intel-driver, libva-vdpau-driver, libvdpau and libva and enabled hardware accelerated playback in Kodi&amp;rsquo;s settings. The Intel HD Graphics can handle 1080p without problems.&lt;/p&gt;

&lt;h3 id=&#34;idle-cpu-usage:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;Idle CPU usage&lt;/h3&gt;

&lt;p&gt;Depending on the Intel driver version, Kodi might use about 15% CPU when idle, but by editing &lt;code&gt;~/.kodi/userdata/advancedsettings.xml&lt;/code&gt; I was able to reduce it to 3%&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;advancedsettings&amp;gt;
  &amp;lt;gui&amp;gt;
    &amp;lt;algorithmdirtyregions&amp;gt;3&amp;lt;/algorithmdirtyregions&amp;gt;
    &amp;lt;nofliptimeout&amp;gt;1000&amp;lt;/nofliptimeout&amp;gt;
  &amp;lt;/gui&amp;gt;
&amp;lt;/advancedsettings&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;mouse-pointer:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;Mouse pointer&lt;/h3&gt;

&lt;p&gt;To get a decent size cursor in Chrome I have these settings in &lt;code&gt;~/.Xresources&lt;/code&gt; (Requires the DMZ mouse cursor theme installed)&lt;/p&gt;

&lt;pre&gt;
Xcursor.theme: DMZ
Xcursor.size: 32
&lt;/pre&gt;

&lt;h2 id=&#34;plugins:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;Plugins&lt;/h2&gt;

&lt;p&gt;I created two simple addons that launches Chromium in fullscreen mode and opens a website like Rdio or Netflix. You can find them in my &lt;a href=&#34;https://github.com/henrik-farre/xbmc-addons&#34;&gt;XBMC addons repository&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;cec-consumer-electronics-control-over-hdmi:c2e1881c6cc9a7bacff7f9afad74d2a0&#34;&gt;CEC (Consumer Electronics Control) over HDMI&lt;/h2&gt;

&lt;p&gt;I also added a USB - CEC Adapter from &lt;a href=&#34;https://www.pulse-eight.com/&#34;&gt;PulseEight&lt;/a&gt; so it is possible to control Kodi using the TVs remote control.&lt;/p&gt;

&lt;p&gt;If you wish to remap some of the buttons on your remote here is an excellent guide: &lt;a href=&#34;http://xbmcnut.blogspot.dk/2013/07/how-to-remap-cec-buttons-on-sony-tv.html&#34;&gt;How To remap CEC buttons on a Sony TV Remote for XBMC under Xbian 1.0.5a&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Multiple profiles in Firefox: tips and tricks</title>
      <link>http://rockhopper.dk/linux/multiple-profiles-in-firefox-tips-and-tricks/</link>
      <pubDate>Sun, 08 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://rockhopper.dk/linux/multiple-profiles-in-firefox-tips-and-tricks/</guid>
      <description>&lt;p&gt;I have two different profiles for Firefox, one for work, and one for everything else.&lt;/p&gt;

&lt;p&gt;To start Firefox with the correct profile, I have created two different application launchers (.desktop files) in ~/.local/share/applications, one called firefox-work.desktop and the other firefox-home.desktop&lt;/p&gt;

&lt;p&gt;The files contain:&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&#34;language-ini&#34;&gt;[Desktop Entry]
Name=Firefox Home
GenericName=Web Browser
Comment=Browse the World Wide Web
Exec=/usr/lib/firefox/firefox -P Home -no-remote %u
Icon=firefox
Terminal=false
Type=Application
MimeType=text/html;text/xml;application/xhtml+xml;application/vnd.mozilla.xul+xml;text/mml;x-scheme-handler/http;x-scheme-handler/https;
StartupNotify=true
Categories=Network;WebBrowser;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Replace &amp;#8220;Home&amp;#8221; with the name of your profile.&lt;/p&gt;

&lt;p&gt;In order to open links in the correct profile, I made a small shell script that used xdotool and zenity:&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&#34;language-bash&#34;&gt;#!/bin/sh

PROFILE=$(zenity --list --text &#34;Open $1 in which profile?&#34; --column &#34;Profile&#34; Work Home);

case $PROFILE in
  Home)
    PID=$(pgrep -f -- &#39;-P Home&#39;)
    ;;
  Work)
    PID=$(pgrep -f -- &#39;-P Work&#39;)
    ;;
  *)
    exit
    ;;
esac

# Avoid &#34;Can&#39;t consume 1 args; are only 0 available. This is a bug.&#34; message: https://github.com/jordansissel/xdotool/issues/14
# Pick the last id, as it seems to be the one needed
WID=$(xdotool search --any --pid $PID --name &#34;random_random_random&#34; | tail -n1)

xdotool windowactivate --sync $WID
xdotool key --window $WID ctrl+t
xdotool key --window $WID ctrl+l
xdotool type --window $WID &#34;$1&#34;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The last thing to to is to open exo-preferred-applications and select the script as the preferred &amp;#8220;web-browser&amp;#8221; (remember &amp;#8220;%s&amp;#8221;).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How not to restore a Linux software raid</title>
      <link>http://rockhopper.dk/linux/software/how-not-to-restore-a-linux-software-raid/</link>
      <pubDate>Sun, 19 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>http://rockhopper.dk/linux/software/how-not-to-restore-a-linux-software-raid/</guid>
      <description>&lt;p&gt;We had a disk failure on one of our Xen servers at &lt;a href=&#34;http://www.bellcom.dk&#34;&gt;work&lt;/a&gt; last week, and what we thought would be a quick disk replace, turned into a small nightmare.&lt;/p&gt;

&lt;p&gt;Our setup is fairly &amp;#8220;simple&amp;#8221;: 2 x raid1&amp;#8217;s consisting of sda1/sdb1 (/dev/md0 mounted at /) and sda3/sdb3 (/dev/md1 with LVM on top of it).&lt;/p&gt;

&lt;p&gt;mdadm reported that sdb1 and sdb3 had failed, so we just had to identify which disk was sdb in the server and replace it. Well it wasn&amp;#8217;t easy to see which disk has which after we had opened the server, so we decided to boot the server again to look up the drives&amp;#8217; serial number (using hdparm -I /dev/sda, and the small barcode on the front of the disk).&lt;/p&gt;

&lt;p&gt;Now the fun part starts. The contents of /proc/mdstat showed something like this after the reboot:&lt;/p&gt;

&lt;pre&gt;Personalities : [raid1]
md1 : active raid1 sdb3[0] sda3[1] (F)
      235400320 blocks [2/1] [U_]

md0 : active raid1 sdb1[0] (F) sda1[1]
      7815488 blocks [1/2] [_U]

unused devices: &amp;lt;none&amp;gt;&lt;/pre&gt;

&lt;p&gt;On md0 sdb1 is failed, and on md1 it&amp;#8217;s sda3, so one partition is marked failed on each drive. Here we made the &lt;strong&gt;big mistake&lt;/strong&gt;: we decided to readd sdb1 to md0 and sdb3 to md1.&lt;/p&gt;

&lt;p&gt;While the raid was syncing there was a lot of disk errors on sda1 and sda3, so we identified sda using its serial number, shutdown the server, replaced the disk, booted and everything looked fine.&lt;/p&gt;

&lt;p&gt;Fast forward to the next day: we started receiving e-mails from customers saying data was missing from their sites, and they where missing data from the day the drive failed&amp;#8230; then it dawned on us: when we readded sda3 it was overridden with the old data from sdb3 :(. Only one thing to do: restore from backup.&lt;/p&gt;

&lt;p&gt;Now the question is: why the hell was sda3 marked as failed after the reboot? It was on the good drive&amp;#8230;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CD/DVD burning, and working with .iso files</title>
      <link>http://rockhopper.dk/linux/software/cddvd-burning-and-working-with-iso-files/</link>
      <pubDate>Thu, 13 Nov 2008 00:00:00 +0000</pubDate>
      
      <guid>http://rockhopper.dk/linux/software/cddvd-burning-and-working-with-iso-files/</guid>
      <description>

&lt;p&gt;Some handy command line tools to burn CDs/DVDs and work with .iso files:&lt;/p&gt;

&lt;h2 id=&#34;burning-iso-files:9bdb5f4f5bfba3f52784bc072e63c9c7&#34;&gt;Burning .iso files:&lt;/h2&gt;

&lt;p&gt;Basic usage of wodim (formally know as cdrecord):&lt;/p&gt;

&lt;pre class=&#34;bash codesnip&#34; style=&#34;font-family:monospace;&#34;&gt;wodim &lt;span class=&#34;re2&#34;&gt;dev&lt;/span&gt;=&lt;span class=&#34;sy0&#34;&gt;/&lt;/span&gt;dev&lt;span class=&#34;sy0&#34;&gt;/&lt;/span&gt;DEVICE image.iso&lt;/pre&gt;

&lt;p&gt;Replace DEVICE with the name of your drive, e.g. hda. You might need to be root/use sudo or have the appropriate permissions to access the device.&lt;/p&gt;

&lt;p&gt;If your drive supports BurnFree add: -v driveropts=burnfree&lt;/p&gt;

&lt;h2 id=&#34;generating-iso-files:9bdb5f4f5bfba3f52784bc072e63c9c7&#34;&gt;Generating .iso files&lt;/h2&gt;

&lt;p&gt;Add content of directory to an iso:&lt;/p&gt;

&lt;pre class=&#34;bash codesnip&#34; style=&#34;font-family:monospace;&#34;&gt;genisoimage &lt;span class=&#34;re5&#34;&gt;-o&lt;/span&gt; image.iso directory&lt;span class=&#34;sy0&#34;&gt;/&lt;/span&gt;&lt;/pre&gt;

&lt;p&gt;Some advanced options that might be useful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;-R : Enable Rock Ridge records (or use -r, read the genisoimage man page for info)&lt;/li&gt;
&lt;li&gt;-joliet-long : Add support for filenames up to 103 chars (breaks joliet specification)&lt;/li&gt;
&lt;li&gt;-graft-points : Maps a directory to another, e.g. specifying &amp;#8220;-graft-points &amp;#8216;/=/home/myusername&amp;rsquo;&amp;#8221; the contents of /home/myusername is mapped to / on the iso&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;to-burn-directly-to-cd-dvd:9bdb5f4f5bfba3f52784bc072e63c9c7&#34;&gt;To burn directly to CD/DVD&lt;/h2&gt;

&lt;p&gt;By combining genisoimage and wodim, you can burn files directly:&lt;/p&gt;

&lt;pre class=&#34;bash codesnip&#34; style=&#34;font-family:monospace;&#34;&gt;genisoimage directory&lt;span class=&#34;sy0&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;sy0&#34;&gt;|&lt;/span&gt; wodim &lt;span class=&#34;re2&#34;&gt;dev&lt;/span&gt;=&lt;span class=&#34;sy0&#34;&gt;/&lt;/span&gt;dev&lt;span class=&#34;sy0&#34;&gt;/&lt;/span&gt;hda -&lt;/pre&gt;

&lt;p&gt;Note the missing -o for genisoimage, and the &amp;#8220;-&amp;#8221; argument for wodim&lt;/p&gt;

&lt;h2 id=&#34;mounting-iso-files:9bdb5f4f5bfba3f52784bc072e63c9c7&#34;&gt;Mounting .iso files&lt;/h2&gt;

&lt;p&gt;This requires root rights:&lt;/p&gt;

&lt;pre class=&#34;bash codesnip&#34; style=&#34;font-family:monospace;&#34;&gt;&lt;span class=&#34;kw2&#34;&gt;mount&lt;/span&gt; &lt;span class=&#34;re5&#34;&gt;-o&lt;/span&gt; loop &lt;span class=&#34;re5&#34;&gt;-t&lt;/span&gt; iso9660 image.iso &lt;span class=&#34;sy0&#34;&gt;/&lt;/span&gt;mnt&lt;span class=&#34;sy0&#34;&gt;/&lt;/span&gt;image&lt;span class=&#34;sy0&#34;&gt;/&lt;/span&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>zsh, bash, screen and urxvt title</title>
      <link>http://rockhopper.dk/linux/software/zsh-bash-screen-and-urxvt-title/</link>
      <pubDate>Wed, 05 Nov 2008 00:00:00 +0000</pubDate>
      
      <guid>http://rockhopper.dk/linux/software/zsh-bash-screen-and-urxvt-title/</guid>
      <description>&lt;p&gt;I use both the zsh and bash shell, and most of the time I run them in screen. This happens in my favourite terminal: urxvt (aka rxvt-unicode).&lt;/p&gt;

&lt;p&gt;I have a pretty consistence terminal title in both shells. I use hostname[last part of current path]:&lt;/p&gt;



&lt;div class=&#34;row&#34;&gt;
  &lt;div class=&#34;col-sm-4&#34;&gt;
    &lt;a href=&#34;http://rockhopper.dk/uploads/zsh_screen_urxvt-300x178.jpg&#34;
        title=&#34;Zsh in screen in urxvt&#34;
        class=&#34;image-link thumbnail&#34;
        
    &gt;
        
            
            &lt;img src=&#34;http://rockhopper.dk/uploads/zsh_screen_urxvt-300x178.jpg&#34;
                class=&#34;
                    &#34;
                
                
                
                
            /&gt;
        
        
        &lt;div class=&#34;caption&#34;&gt;Zsh in screen in urxvt&lt;/div&gt;
    &lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;I have the following in my ~/.zsh:&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&#34;language-bash&#34;&gt;if [[ ${TERM} == &#34;screen-bce&#34; || ${TERM} == &#34;screen&#34; ]]; then
  precmd () { print -Pn &#34;\033k\033\134\033k%m[%1d]\033\134&#34; }
  preexec () { print -Pn &#34;\033k\033\134\033k%m[$1]\033\134&#34; }
else
  precmd () { print -Pn &#34;\e]0;%n@%m: %~\a&#34; }
  preexec () { print -Pn &#34;\e]0;%n@%m: $1\a&#34; }
fi
PS1=$&#39;%{\e[0;32m%}%m%{\e[0m%}:%~&amp;gt; &#39;
export PS1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;My ~/.bashrc:&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&#34;language-bash&#34;&gt;PROMPT_COMMAND=&#39;echo -ne &#34;\033]0;${USER}@${HOSTNAME}: ${PWD}\007&#34;&#39;
PS1=&#39;\[\033[0;32m\]\h\[\033[00m\]:\w&amp;gt; &#39;
export PS1 PROMPT_COMMAND
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And finally my ~/.screenrc&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&#34;language-bash&#34;&gt;hardstatus string &#34;%h&#34;
caption always &#34;%{= kw} %-w%{= wk}%n*%t%{-}%+w%{= kw} %=%d %M %0c %{g}%H%{-}&#34;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Fast nagios exim mail queue plugin replacement</title>
      <link>http://rockhopper.dk/linux/software/fast-nagios-exim-mail-queue-plugin-replacement/</link>
      <pubDate>Sat, 26 Jul 2008 00:00:00 +0000</pubDate>
      
      <guid>http://rockhopper.dk/linux/software/fast-nagios-exim-mail-queue-plugin-replacement/</guid>
      <description>&lt;p&gt;We had a problem with the nagios check_mailq plugin at &lt;a href=&#34;http://www.bellcom.dk&#34;&gt;work&lt;/a&gt;, it kept timing out. So I wrote a simple bash script (instead of 610 lines of perl) which is &amp;#8220;compatible&amp;#8221; with check_mailq (supports the same arguments) which uses &amp;#8220;exim4&amp;#8221; and is very quick. Just drop it in /usr/local/bin/check_mailq_simple.sh and adjust your nagios conf to use that instead of check_mailq&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

WARNING=&#34;&#34;
CRITICAL=&#34;&#34;
MAILER=&#34;&#34;
TIMER=&#34;&#34;

while getopts &#34;w:c:M:t&#34; optionName; do
  case &#34;${optionName}&#34; in
    w) WARNING=&#34;${OPTARG}&#34;;;
    c) CRITICAL=&#34;${OPTARG}&#34;;;
    M) MAILER=&#34;${OPTARG}&#34;;;
    t) TIMER=&#34;${OPTARG}&#34;;;
  esac
done

MAILS_IN_QUEUE=`sudo /usr/sbin/exim4 -bpc`

if [[ ${MAILS_IN_QUEUE} -gt ${CRITICAL} ]]; then
  echo &#34;CRITICAL: mailq is ${MAILS_IN_QUEUE} (threshold w = ${CRITICAL})|unsent=${MAILS_IN_QUEUE};${WARNING};${CRITICAL};0&#34;
  exit 2
elif [[ ${MAILS_IN_QUEUE} -gt ${WARNING} ]]; then
  echo &#34;WARNING: mailq is ${MAILS_IN_QUEUE} (threshold w = ${WARNING})|unsent=${MAILS_IN_QUEUE};${WARNING};${CRITICAL};0&#34;
  exit 1
elif [[ ${MAILS_IN_QUEUE} -lt ${WARNING} ]]; then
  echo &#34;OK: mailq is ${MAILS_IN_QUEUE} (threshold w = ${WARNING})|unsent=${MAILS_IN_QUEUE};${WARNING};${CRITICAL};0&#34;
  exit
else
  echo &#34;ERROR: something did not go right&#34;
  exit 2
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This has been tested on Debian sarge.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
