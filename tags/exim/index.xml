<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Exim on Rockhopper.dk</title>
    <link>http://rockhopper.dk/tags/exim/</link>
    <description>Recent content in Exim on Rockhopper.dk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 26 Jul 2008 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/exim/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Fast nagios exim mail queue plugin replacement</title>
      <link>http://rockhopper.dk/linux/software/fast-nagios-exim-mail-queue-plugin-replacement/</link>
      <pubDate>Sat, 26 Jul 2008 00:00:00 +0000</pubDate>
      
      <guid>http://rockhopper.dk/linux/software/fast-nagios-exim-mail-queue-plugin-replacement/</guid>
      <description>&lt;p&gt;We had a problem with the nagios check_mailq plugin at &lt;a href=&#34;http://www.bellcom.dk&#34;&gt;work&lt;/a&gt;, it kept timing out. So I wrote a simple bash script (instead of 610 lines of perl) which is &amp;#8220;compatible&amp;#8221; with check_mailq (supports the same arguments) which uses &amp;#8220;exim4&amp;#8221; and is very quick. Just drop it in /usr/local/bin/check_mailq_simple.sh and adjust your nagios conf to use that instead of check_mailq
&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

WARNING=&#34;&#34;
CRITICAL=&#34;&#34;
MAILER=&#34;&#34;
TIMER=&#34;&#34;

while getopts &#34;w:c:M:t&#34; optionName; do
  case &#34;${optionName}&#34; in
    w) WARNING=&#34;${OPTARG}&#34;;;
    c) CRITICAL=&#34;${OPTARG}&#34;;;
    M) MAILER=&#34;${OPTARG}&#34;;;
    t) TIMER=&#34;${OPTARG}&#34;;;
  esac
done

MAILS_IN_QUEUE=`sudo /usr/sbin/exim4 -bpc`

if [[ ${MAILS_IN_QUEUE} -gt ${CRITICAL} ]]; then
  echo &#34;CRITICAL: mailq is ${MAILS_IN_QUEUE} (threshold w = ${CRITICAL})|unsent=${MAILS_IN_QUEUE};${WARNING};${CRITICAL};0&#34;
  exit 2
elif [[ ${MAILS_IN_QUEUE} -gt ${WARNING} ]]; then
  echo &#34;WARNING: mailq is ${MAILS_IN_QUEUE} (threshold w = ${WARNING})|unsent=${MAILS_IN_QUEUE};${WARNING};${CRITICAL};0&#34;
  exit 1
elif [[ ${MAILS_IN_QUEUE} -lt ${WARNING} ]]; then
  echo &#34;OK: mailq is ${MAILS_IN_QUEUE} (threshold w = ${WARNING})|unsent=${MAILS_IN_QUEUE};${WARNING};${CRITICAL};0&#34;
  exit
else
  echo &#34;ERROR: something did not go right&#34;
  exit 2
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This has been tested on Debian sarge.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
